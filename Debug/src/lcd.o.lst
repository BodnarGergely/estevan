   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	GPIO_InitStructure,8,4
  19              		.align	2
  20              		.global	__delay_cycles
  21              		.thumb
  22              		.thumb_func
  24              	__delay_cycles:
  25              	.LFB110:
  26              		.file 1 "../src/lcd.c"
   1:../src/lcd.c  **** /*
   2:../src/lcd.c  ****  * lcd.c
   3:../src/lcd.c  ****  *
   4:../src/lcd.c  ****  *  Created on: 2013.07.01.
   5:../src/lcd.c  ****  *      Author: Gergo
   6:../src/lcd.c  ****  */
   7:../src/lcd.c  **** 
   8:../src/lcd.c  **** 
   9:../src/lcd.c  **** #include "lcd.h"
  10:../src/lcd.c  **** 
  11:../src/lcd.c  **** void __delay_cycles(int a)
  12:../src/lcd.c  **** {
  27              		.loc 1 12 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  13:../src/lcd.c  ****     int i = 0;
  43              		.loc 1 13 0
  44 0008 4FF00003 		mov	r3, #0
  45 000c FB60     		str	r3, [r7, #12]
  14:../src/lcd.c  ****     int f = 0;
  46              		.loc 1 14 0
  47 000e 4FF00003 		mov	r3, #0
  48 0012 BB60     		str	r3, [r7, #8]
  15:../src/lcd.c  ****     while(f<a)
  49              		.loc 1 15 0
  50 0014 0AE0     		b	.L2
  51              	.L4:
  16:../src/lcd.c  ****     {
  17:../src/lcd.c  ****             while(i<60)
  18:../src/lcd.c  ****                 {i++;}
  52              		.loc 1 18 0
  53 0016 FB68     		ldr	r3, [r7, #12]
  54 0018 03F10103 		add	r3, r3, #1
  55 001c FB60     		str	r3, [r7, #12]
  56              	.L3:
  17:../src/lcd.c  ****             while(i<60)
  57              		.loc 1 17 0 discriminator 1
  58 001e FB68     		ldr	r3, [r7, #12]
  59 0020 3B2B     		cmp	r3, #59
  60 0022 F8DD     		ble	.L4
  19:../src/lcd.c  ****         f++;
  61              		.loc 1 19 0
  62 0024 BB68     		ldr	r3, [r7, #8]
  63 0026 03F10103 		add	r3, r3, #1
  64 002a BB60     		str	r3, [r7, #8]
  65              	.L2:
  15:../src/lcd.c  ****     while(f<a)
  66              		.loc 1 15 0 discriminator 1
  67 002c BA68     		ldr	r2, [r7, #8]
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 9A42     		cmp	r2, r3
  70 0032 F4DB     		blt	.L3
  20:../src/lcd.c  ****     }
  21:../src/lcd.c  **** }
  71              		.loc 1 21 0
  72 0034 07F11407 		add	r7, r7, #20
  73 0038 BD46     		mov	sp, r7
  74 003a 80BC     		pop	{r7}
  75 003c 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE110:
  79 003e 00BF     		.align	2
  80              		.global	PulseLcm
  81              		.thumb
  82              		.thumb_func
  84              	PulseLcm:
  85              	.LFB111:
  22:../src/lcd.c  **** 
  23:../src/lcd.c  **** void PulseLcm()
  24:../src/lcd.c  **** {
  86              		.loc 1 24 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0040 80B5     		push	{r7, lr}
  91              	.LCFI3:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0042 00AF     		add	r7, sp, #0
  96              	.LCFI4:
  97              		.cfi_def_cfa_register 7
  25:../src/lcd.c  ****     LCM_OUT &= ~LCM_PIN_EN;
  98              		.loc 1 25 0
  99 0044 0F4B     		ldr	r3, .L7
 100 0046 0F4A     		ldr	r2, .L7
 101 0048 5269     		ldr	r2, [r2, #20]
 102 004a 22F48072 		bic	r2, r2, #256
 103 004e 5A61     		str	r2, [r3, #20]
  26:../src/lcd.c  ****     __delay_cycles(400);
 104              		.loc 1 26 0
 105 0050 4FF4C870 		mov	r0, #400
 106 0054 FFF7FEFF 		bl	__delay_cycles
  27:../src/lcd.c  ****     LCM_OUT |= LCM_PIN_EN;
 107              		.loc 1 27 0
 108 0058 0A4B     		ldr	r3, .L7
 109 005a 0A4A     		ldr	r2, .L7
 110 005c 5269     		ldr	r2, [r2, #20]
 111 005e 42F48072 		orr	r2, r2, #256
 112 0062 5A61     		str	r2, [r3, #20]
  28:../src/lcd.c  ****     __delay_cycles(400);
 113              		.loc 1 28 0
 114 0064 4FF4C870 		mov	r0, #400
 115 0068 FFF7FEFF 		bl	__delay_cycles
  29:../src/lcd.c  ****     LCM_OUT &= (~LCM_PIN_EN);
 116              		.loc 1 29 0
 117 006c 054B     		ldr	r3, .L7
 118 006e 054A     		ldr	r2, .L7
 119 0070 5269     		ldr	r2, [r2, #20]
 120 0072 22F48072 		bic	r2, r2, #256
 121 0076 5A61     		str	r2, [r3, #20]
  30:../src/lcd.c  ****     __delay_cycles(400);
 122              		.loc 1 30 0
 123 0078 4FF4C870 		mov	r0, #400
 124 007c FFF7FEFF 		bl	__delay_cycles
  31:../src/lcd.c  **** }
 125              		.loc 1 31 0
 126 0080 80BD     		pop	{r7, pc}
 127              	.L8:
 128 0082 00BF     		.align	2
 129              	.L7:
 130 0084 00100240 		.word	1073876992
 131              		.cfi_endproc
 132              	.LFE111:
 134              		.align	2
 135              		.global	SendByte
 136              		.thumb
 137              		.thumb_func
 139              	SendByte:
 140              	.LFB112:
  32:../src/lcd.c  **** 
  33:../src/lcd.c  **** void SendByte(char ByteToSend, int IsData)
  34:../src/lcd.c  **** {
 141              		.loc 1 34 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0088 80B5     		push	{r7, lr}
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 008a 82B0     		sub	sp, sp, #8
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 16
 153 008c 00AF     		add	r7, sp, #0
 154              	.LCFI7:
 155              		.cfi_def_cfa_register 7
 156 008e 0346     		mov	r3, r0
 157 0090 3960     		str	r1, [r7, #0]
 158 0092 FB71     		strb	r3, [r7, #7]
  35:../src/lcd.c  ****     LCM_OUT &= (~LCM_PIN_MASK);
 159              		.loc 1 35 0
 160 0094 264B     		ldr	r3, .L14
 161 0096 264A     		ldr	r2, .L14
 162 0098 5269     		ldr	r2, [r2, #20]
 163 009a 22F47E72 		bic	r2, r2, #1016
 164 009e 5A61     		str	r2, [r3, #20]
  36:../src/lcd.c  ****     LCM_OUT |= (ByteToSend & 0xF0);
 165              		.loc 1 36 0
 166 00a0 234B     		ldr	r3, .L14
 167 00a2 234A     		ldr	r2, .L14
 168 00a4 5169     		ldr	r1, [r2, #20]
 169 00a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 170 00a8 02F0F002 		and	r2, r2, #240
 171 00ac 0A43     		orrs	r2, r2, r1
 172 00ae 5A61     		str	r2, [r3, #20]
  37:../src/lcd.c  **** 
  38:../src/lcd.c  ****     if (IsData == TRUE)
 173              		.loc 1 38 0
 174 00b0 3B68     		ldr	r3, [r7, #0]
 175 00b2 012B     		cmp	r3, #1
 176 00b4 06D1     		bne	.L10
  39:../src/lcd.c  ****     {
  40:../src/lcd.c  ****         LCM_OUT |= LCM_PIN_RS;
 177              		.loc 1 40 0
 178 00b6 1E4B     		ldr	r3, .L14
 179 00b8 1D4A     		ldr	r2, .L14
 180 00ba 5269     		ldr	r2, [r2, #20]
 181 00bc 42F00802 		orr	r2, r2, #8
 182 00c0 5A61     		str	r2, [r3, #20]
 183 00c2 05E0     		b	.L11
 184              	.L10:
  41:../src/lcd.c  ****     }
  42:../src/lcd.c  ****     else
  43:../src/lcd.c  ****     {
  44:../src/lcd.c  ****         LCM_OUT &= ~LCM_PIN_RS;
 185              		.loc 1 44 0
 186 00c4 1A4B     		ldr	r3, .L14
 187 00c6 1A4A     		ldr	r2, .L14
 188 00c8 5269     		ldr	r2, [r2, #20]
 189 00ca 22F00802 		bic	r2, r2, #8
 190 00ce 5A61     		str	r2, [r3, #20]
 191              	.L11:
  45:../src/lcd.c  ****     }
  46:../src/lcd.c  ****     PulseLcm();
 192              		.loc 1 46 0
 193 00d0 FFF7FEFF 		bl	PulseLcm
  47:../src/lcd.c  ****     __delay_cycles(400);
 194              		.loc 1 47 0
 195 00d4 4FF4C870 		mov	r0, #400
 196 00d8 FFF7FEFF 		bl	__delay_cycles
  48:../src/lcd.c  ****     LCM_OUT &= (~LCM_PIN_MASK);
 197              		.loc 1 48 0
 198 00dc 144B     		ldr	r3, .L14
 199 00de 144A     		ldr	r2, .L14
 200 00e0 5269     		ldr	r2, [r2, #20]
 201 00e2 22F47E72 		bic	r2, r2, #1016
 202 00e6 5A61     		str	r2, [r3, #20]
  49:../src/lcd.c  ****     LCM_OUT |= ((ByteToSend & 0x0F) << 4);
 203              		.loc 1 49 0
 204 00e8 114B     		ldr	r3, .L14
 205 00ea 114A     		ldr	r2, .L14
 206 00ec 5169     		ldr	r1, [r2, #20]
 207 00ee FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 208 00f0 4FEA0212 		lsl	r2, r2, #4
 209 00f4 D2B2     		uxtb	r2, r2
 210 00f6 0A43     		orrs	r2, r2, r1
 211 00f8 5A61     		str	r2, [r3, #20]
  50:../src/lcd.c  **** 
  51:../src/lcd.c  ****     if (IsData == TRUE)
 212              		.loc 1 51 0
 213 00fa 3B68     		ldr	r3, [r7, #0]
 214 00fc 012B     		cmp	r3, #1
 215 00fe 06D1     		bne	.L12
  52:../src/lcd.c  ****     {
  53:../src/lcd.c  ****         LCM_OUT |= LCM_PIN_RS;
 216              		.loc 1 53 0
 217 0100 0B4B     		ldr	r3, .L14
 218 0102 0B4A     		ldr	r2, .L14
 219 0104 5269     		ldr	r2, [r2, #20]
 220 0106 42F00802 		orr	r2, r2, #8
 221 010a 5A61     		str	r2, [r3, #20]
 222 010c 05E0     		b	.L13
 223              	.L12:
  54:../src/lcd.c  ****     }
  55:../src/lcd.c  ****     else
  56:../src/lcd.c  ****     {
  57:../src/lcd.c  ****         LCM_OUT &= ~LCM_PIN_RS;
 224              		.loc 1 57 0
 225 010e 084B     		ldr	r3, .L14
 226 0110 074A     		ldr	r2, .L14
 227 0112 5269     		ldr	r2, [r2, #20]
 228 0114 22F00802 		bic	r2, r2, #8
 229 0118 5A61     		str	r2, [r3, #20]
 230              	.L13:
  58:../src/lcd.c  ****     }
  59:../src/lcd.c  **** 
  60:../src/lcd.c  ****     PulseLcm();
 231              		.loc 1 60 0
 232 011a FFF7FEFF 		bl	PulseLcm
  61:../src/lcd.c  ****     __delay_cycles(400);
 233              		.loc 1 61 0
 234 011e 4FF4C870 		mov	r0, #400
 235 0122 FFF7FEFF 		bl	__delay_cycles
  62:../src/lcd.c  **** }
 236              		.loc 1 62 0
 237 0126 07F10807 		add	r7, r7, #8
 238 012a BD46     		mov	sp, r7
 239 012c 80BD     		pop	{r7, pc}
 240              	.L15:
 241 012e 00BF     		.align	2
 242              	.L14:
 243 0130 00100240 		.word	1073876992
 244              		.cfi_endproc
 245              	.LFE112:
 247              		.align	2
 248              		.global	ReceiveStatus
 249              		.thumb
 250              		.thumb_func
 252              	ReceiveStatus:
 253              	.LFB113:
  63:../src/lcd.c  **** void ReceiveStatus(char * ByteToReceive)
  64:../src/lcd.c  **** {
 254              		.loc 1 64 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0134 80B5     		push	{r7, lr}
 259              	.LCFI8:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0136 82B0     		sub	sp, sp, #8
 264              	.LCFI9:
 265              		.cfi_def_cfa_offset 16
 266 0138 00AF     		add	r7, sp, #0
 267              	.LCFI10:
 268              		.cfi_def_cfa_register 7
 269 013a 7860     		str	r0, [r7, #4]
  65:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5| GPIO_Pin_6| GPIO_Pin_7;
 270              		.loc 1 65 0
 271 013c 404B     		ldr	r3, .L17
 272 013e 4FF0F002 		mov	r2, #240
 273 0142 1A60     		str	r2, [r3, #0]
  66:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 274              		.loc 1 66 0
 275 0144 3E4B     		ldr	r3, .L17
 276 0146 4FF00002 		mov	r2, #0
 277 014a 1A71     		strb	r2, [r3, #4]
  67:../src/lcd.c  ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 278              		.loc 1 67 0
 279 014c 3C4B     		ldr	r3, .L17
 280 014e 4FF00002 		mov	r2, #0
 281 0152 9A71     		strb	r2, [r3, #6]
  68:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 282              		.loc 1 68 0
 283 0154 3A4B     		ldr	r3, .L17
 284 0156 4FF00302 		mov	r2, #3
 285 015a 5A71     		strb	r2, [r3, #5]
  69:../src/lcd.c  ****     GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 286              		.loc 1 69 0
 287 015c 384B     		ldr	r3, .L17
 288 015e 4FF00002 		mov	r2, #0
 289 0162 DA71     		strb	r2, [r3, #7]
  70:../src/lcd.c  ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 290              		.loc 1 70 0
 291 0164 3748     		ldr	r0, .L17+4
 292 0166 3649     		ldr	r1, .L17
 293 0168 FFF7FEFF 		bl	GPIO_Init
  71:../src/lcd.c  **** 
  72:../src/lcd.c  ****     LCM_OUT &= (~(LCM_PIN_RS | LCM_PIN_EN | LCM_PIN_RW));
 294              		.loc 1 72 0
 295 016c 364B     		ldr	r3, .L17+8
 296 016e 364A     		ldr	r2, .L17+8
 297 0170 5269     		ldr	r2, [r2, #20]
 298 0172 22F44272 		bic	r2, r2, #776
 299 0176 5A61     		str	r2, [r3, #20]
  73:../src/lcd.c  ****     LCM_OUT |= LCM_PIN_RW;
 300              		.loc 1 73 0
 301 0178 334B     		ldr	r3, .L17+8
 302 017a 334A     		ldr	r2, .L17+8
 303 017c 5269     		ldr	r2, [r2, #20]
 304 017e 42F40072 		orr	r2, r2, #512
 305 0182 5A61     		str	r2, [r3, #20]
  74:../src/lcd.c  ****     LCM_OUT &= ~LCM_PIN_RS;
 306              		.loc 1 74 0
 307 0184 304B     		ldr	r3, .L17+8
 308 0186 304A     		ldr	r2, .L17+8
 309 0188 5269     		ldr	r2, [r2, #20]
 310 018a 22F00802 		bic	r2, r2, #8
 311 018e 5A61     		str	r2, [r3, #20]
  75:../src/lcd.c  **** 
  76:../src/lcd.c  ****      *ByteToReceive = 0;
 312              		.loc 1 76 0
 313 0190 7B68     		ldr	r3, [r7, #4]
 314 0192 4FF00002 		mov	r2, #0
 315 0196 1A70     		strb	r2, [r3, #0]
  77:../src/lcd.c  ****     PulseLcm();
 316              		.loc 1 77 0
 317 0198 FFF7FEFF 		bl	PulseLcm
  78:../src/lcd.c  ****     *ByteToReceive |= (LCM_IN & 0xF0);
 318              		.loc 1 78 0
 319 019c 7B68     		ldr	r3, [r7, #4]
 320 019e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 321 01a0 294B     		ldr	r3, .L17+8
 322 01a2 1B69     		ldr	r3, [r3, #16]
 323 01a4 DBB2     		uxtb	r3, r3
 324 01a6 23F00F03 		bic	r3, r3, #15
 325 01aa DBB2     		uxtb	r3, r3
 326 01ac 1343     		orrs	r3, r3, r2
 327 01ae DAB2     		uxtb	r2, r3
 328 01b0 7B68     		ldr	r3, [r7, #4]
 329 01b2 1A70     		strb	r2, [r3, #0]
  79:../src/lcd.c  ****     __delay_cycles(40000);
 330              		.loc 1 79 0
 331 01b4 49F64040 		movw	r0, #40000
 332 01b8 FFF7FEFF 		bl	__delay_cycles
  80:../src/lcd.c  **** 
  81:../src/lcd.c  ****     LCM_OUT &= (~(LCM_PIN_RS | LCM_PIN_EN | LCM_PIN_RW));
 333              		.loc 1 81 0
 334 01bc 224B     		ldr	r3, .L17+8
 335 01be 224A     		ldr	r2, .L17+8
 336 01c0 5269     		ldr	r2, [r2, #20]
 337 01c2 22F44272 		bic	r2, r2, #776
 338 01c6 5A61     		str	r2, [r3, #20]
  82:../src/lcd.c  ****     LCM_OUT |= LCM_PIN_RW;
 339              		.loc 1 82 0
 340 01c8 1F4B     		ldr	r3, .L17+8
 341 01ca 1F4A     		ldr	r2, .L17+8
 342 01cc 5269     		ldr	r2, [r2, #20]
 343 01ce 42F40072 		orr	r2, r2, #512
 344 01d2 5A61     		str	r2, [r3, #20]
  83:../src/lcd.c  ****     LCM_OUT &= ~LCM_PIN_RS;
 345              		.loc 1 83 0
 346 01d4 1C4B     		ldr	r3, .L17+8
 347 01d6 1C4A     		ldr	r2, .L17+8
 348 01d8 5269     		ldr	r2, [r2, #20]
 349 01da 22F00802 		bic	r2, r2, #8
 350 01de 5A61     		str	r2, [r3, #20]
  84:../src/lcd.c  **** 
  85:../src/lcd.c  ****     PulseLcm();
 351              		.loc 1 85 0
 352 01e0 FFF7FEFF 		bl	PulseLcm
  86:../src/lcd.c  ****     *ByteToReceive |= ((LCM_IN & 0xF0) >> 4);
 353              		.loc 1 86 0
 354 01e4 7B68     		ldr	r3, [r7, #4]
 355 01e6 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 356 01e8 174B     		ldr	r3, .L17+8
 357 01ea 1B69     		ldr	r3, [r3, #16]
 358 01ec 03F0F003 		and	r3, r3, #240
 359 01f0 4FEA1313 		lsr	r3, r3, #4
 360 01f4 DBB2     		uxtb	r3, r3
 361 01f6 1343     		orrs	r3, r3, r2
 362 01f8 DAB2     		uxtb	r2, r3
 363 01fa 7B68     		ldr	r3, [r7, #4]
 364 01fc 1A70     		strb	r2, [r3, #0]
  87:../src/lcd.c  ****     __delay_cycles(40000);
 365              		.loc 1 87 0
 366 01fe 49F64040 		movw	r0, #40000
 367 0202 FFF7FEFF 		bl	__delay_cycles
  88:../src/lcd.c  **** 
  89:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5| GPIO_Pin_6| GPIO_Pin_7;
 368              		.loc 1 89 0
 369 0206 0E4B     		ldr	r3, .L17
 370 0208 4FF0F002 		mov	r2, #240
 371 020c 1A60     		str	r2, [r3, #0]
  90:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 372              		.loc 1 90 0
 373 020e 0C4B     		ldr	r3, .L17
 374 0210 4FF00102 		mov	r2, #1
 375 0214 1A71     		strb	r2, [r3, #4]
  91:../src/lcd.c  ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 376              		.loc 1 91 0
 377 0216 0A4B     		ldr	r3, .L17
 378 0218 4FF00002 		mov	r2, #0
 379 021c 9A71     		strb	r2, [r3, #6]
  92:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 380              		.loc 1 92 0
 381 021e 084B     		ldr	r3, .L17
 382 0220 4FF00302 		mov	r2, #3
 383 0224 5A71     		strb	r2, [r3, #5]
  93:../src/lcd.c  ****     GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 384              		.loc 1 93 0
 385 0226 064B     		ldr	r3, .L17
 386 0228 4FF00002 		mov	r2, #0
 387 022c DA71     		strb	r2, [r3, #7]
  94:../src/lcd.c  ****     GPIO_Init(GPIOB, &GPIO_InitStructure);
 388              		.loc 1 94 0
 389 022e 0548     		ldr	r0, .L17+4
 390 0230 0349     		ldr	r1, .L17
 391 0232 FFF7FEFF 		bl	GPIO_Init
  95:../src/lcd.c  **** }
 392              		.loc 1 95 0
 393 0236 07F10807 		add	r7, r7, #8
 394 023a BD46     		mov	sp, r7
 395 023c 80BD     		pop	{r7, pc}
 396              	.L18:
 397 023e 00BF     		.align	2
 398              	.L17:
 399 0240 00000000 		.word	GPIO_InitStructure
 400 0244 00040240 		.word	1073873920
 401 0248 00100240 		.word	1073876992
 402              		.cfi_endproc
 403              	.LFE113:
 405              		.align	2
 406              		.global	Cursor
 407              		.thumb
 408              		.thumb_func
 410              	Cursor:
 411              	.LFB114:
  96:../src/lcd.c  **** 
  97:../src/lcd.c  **** 
  98:../src/lcd.c  **** 
  99:../src/lcd.c  **** void Cursor(char Row, char Col)
 100:../src/lcd.c  **** {
 412              		.loc 1 100 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 16
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 024c 80B5     		push	{r7, lr}
 417              	.LCFI11:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 024e 84B0     		sub	sp, sp, #16
 422              	.LCFI12:
 423              		.cfi_def_cfa_offset 24
 424 0250 00AF     		add	r7, sp, #0
 425              	.LCFI13:
 426              		.cfi_def_cfa_register 7
 427 0252 0246     		mov	r2, r0
 428 0254 0B46     		mov	r3, r1
 429 0256 FA71     		strb	r2, [r7, #7]
 430 0258 BB71     		strb	r3, [r7, #6]
 101:../src/lcd.c  ****     char address;
 102:../src/lcd.c  **** 
 103:../src/lcd.c  ****     __delay_cycles(4000);
 431              		.loc 1 103 0
 432 025a 4FF47A60 		mov	r0, #4000
 433 025e FFF7FEFF 		bl	__delay_cycles
 104:../src/lcd.c  **** 
 105:../src/lcd.c  ****     if (Row == 0)
 434              		.loc 1 105 0
 435 0262 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 436 0264 002B     		cmp	r3, #0
 437 0266 03D1     		bne	.L20
 106:../src/lcd.c  ****     {
 107:../src/lcd.c  ****         address = 0;
 438              		.loc 1 107 0
 439 0268 4FF00003 		mov	r3, #0
 440 026c FB73     		strb	r3, [r7, #15]
 441 026e 10E0     		b	.L21
 442              	.L20:
 108:../src/lcd.c  ****     }
 109:../src/lcd.c  ****     else if(Row == 1 )
 443              		.loc 1 109 0
 444 0270 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 445 0272 012B     		cmp	r3, #1
 446 0274 03D1     		bne	.L22
 110:../src/lcd.c  ****     {
 111:../src/lcd.c  ****         address = 0x40;
 447              		.loc 1 111 0
 448 0276 4FF04003 		mov	r3, #64
 449 027a FB73     		strb	r3, [r7, #15]
 450 027c 09E0     		b	.L21
 451              	.L22:
 112:../src/lcd.c  ****     }
 113:../src/lcd.c  ****     else if(Row == 2 )
 452              		.loc 1 113 0
 453 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 0280 022B     		cmp	r3, #2
 455 0282 03D1     		bne	.L23
 114:../src/lcd.c  ****     {
 115:../src/lcd.c  ****         address = 0x10;
 456              		.loc 1 115 0
 457 0284 4FF01003 		mov	r3, #16
 458 0288 FB73     		strb	r3, [r7, #15]
 459 028a 02E0     		b	.L21
 460              	.L23:
 116:../src/lcd.c  ****     }
 117:../src/lcd.c  ****     else
 118:../src/lcd.c  ****     {
 119:../src/lcd.c  ****         address = 0x50;
 461              		.loc 1 119 0
 462 028c 4FF05003 		mov	r3, #80
 463 0290 FB73     		strb	r3, [r7, #15]
 464              	.L21:
 120:../src/lcd.c  ****     }
 121:../src/lcd.c  **** 
 122:../src/lcd.c  ****     address |= Col;
 465              		.loc 1 122 0
 466 0292 FA7B     		ldrb	r2, [r7, #15]
 467 0294 BB79     		ldrb	r3, [r7, #6]
 468 0296 1343     		orrs	r3, r3, r2
 469 0298 FB73     		strb	r3, [r7, #15]
 123:../src/lcd.c  ****     SendByte(0x80 | address, FALSE);
 470              		.loc 1 123 0
 471 029a FB7B     		ldrb	r3, [r7, #15]
 472 029c 63F07F03 		orn	r3, r3, #127
 473 02a0 DBB2     		uxtb	r3, r3
 474 02a2 1846     		mov	r0, r3
 475 02a4 4FF00001 		mov	r1, #0
 476 02a8 FFF7FEFF 		bl	SendByte
 124:../src/lcd.c  **** 
 125:../src/lcd.c  ****     __delay_cycles(4000);
 477              		.loc 1 125 0
 478 02ac 4FF47A60 		mov	r0, #4000
 479 02b0 FFF7FEFF 		bl	__delay_cycles
 126:../src/lcd.c  **** }
 480              		.loc 1 126 0
 481 02b4 07F11007 		add	r7, r7, #16
 482 02b8 BD46     		mov	sp, r7
 483 02ba 80BD     		pop	{r7, pc}
 484              		.cfi_endproc
 485              	.LFE114:
 487              		.align	2
 488              		.global	ClearLcmScreen
 489              		.thumb
 490              		.thumb_func
 492              	ClearLcmScreen:
 493              	.LFB115:
 127:../src/lcd.c  **** 
 128:../src/lcd.c  **** 
 129:../src/lcd.c  **** void ClearLcmScreen()
 130:../src/lcd.c  **** {
 494              		.loc 1 130 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 02bc 80B5     		push	{r7, lr}
 499              	.LCFI14:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 02be 00AF     		add	r7, sp, #0
 504              	.LCFI15:
 505              		.cfi_def_cfa_register 7
 131:../src/lcd.c  ****     __delay_cycles(40000);
 506              		.loc 1 131 0
 507 02c0 49F64040 		movw	r0, #40000
 508 02c4 FFF7FEFF 		bl	__delay_cycles
 132:../src/lcd.c  ****     SendByte(0x01, FALSE);
 509              		.loc 1 132 0
 510 02c8 4FF00100 		mov	r0, #1
 511 02cc 4FF00001 		mov	r1, #0
 512 02d0 FFF7FEFF 		bl	SendByte
 133:../src/lcd.c  ****     __delay_cycles(40000);
 513              		.loc 1 133 0
 514 02d4 49F64040 		movw	r0, #40000
 515 02d8 FFF7FEFF 		bl	__delay_cycles
 134:../src/lcd.c  ****     SendByte(0x02, FALSE);
 516              		.loc 1 134 0
 517 02dc 4FF00200 		mov	r0, #2
 518 02e0 4FF00001 		mov	r1, #0
 519 02e4 FFF7FEFF 		bl	SendByte
 135:../src/lcd.c  ****     __delay_cycles(40000);
 520              		.loc 1 135 0
 521 02e8 49F64040 		movw	r0, #40000
 522 02ec FFF7FEFF 		bl	__delay_cycles
 136:../src/lcd.c  **** }
 523              		.loc 1 136 0
 524 02f0 80BD     		pop	{r7, pc}
 525              		.cfi_endproc
 526              	.LFE115:
 528 02f2 00BF     		.align	2
 529              		.global	InitializeLcm
 530              		.thumb
 531              		.thumb_func
 533              	InitializeLcm:
 534              	.LFB116:
 137:../src/lcd.c  **** 
 138:../src/lcd.c  **** void InitializeLcm(void)
 139:../src/lcd.c  **** {
 535              		.loc 1 139 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 02f4 80B5     		push	{r7, lr}
 540              	.LCFI16:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 02f6 00AF     		add	r7, sp, #0
 545              	.LCFI17:
 546              		.cfi_def_cfa_register 7
 140:../src/lcd.c  ****     RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 547              		.loc 1 140 0
 548 02f8 4FF01000 		mov	r0, #16
 549 02fc 4FF00101 		mov	r1, #1
 550 0300 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 141:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7 | 
 551              		.loc 1 141 0
 552 0304 364B     		ldr	r3, .L26
 553 0306 4FF47E72 		mov	r2, #1016
 554 030a 1A60     		str	r2, [r3, #0]
 142:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 555              		.loc 1 142 0
 556 030c 344B     		ldr	r3, .L26
 557 030e 4FF00102 		mov	r2, #1
 558 0312 1A71     		strb	r2, [r3, #4]
 143:../src/lcd.c  ****     GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 559              		.loc 1 143 0
 560 0314 324B     		ldr	r3, .L26
 561 0316 4FF00002 		mov	r2, #0
 562 031a 9A71     		strb	r2, [r3, #6]
 144:../src/lcd.c  ****     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 563              		.loc 1 144 0
 564 031c 304B     		ldr	r3, .L26
 565 031e 4FF00302 		mov	r2, #3
 566 0322 5A71     		strb	r2, [r3, #5]
 145:../src/lcd.c  ****     GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 567              		.loc 1 145 0
 568 0324 2E4B     		ldr	r3, .L26
 569 0326 4FF00002 		mov	r2, #0
 570 032a DA71     		strb	r2, [r3, #7]
 146:../src/lcd.c  ****     GPIO_Init(GPIOE, &GPIO_InitStructure);
 571              		.loc 1 146 0
 572 032c 2D48     		ldr	r0, .L26+4
 573 032e 2C49     		ldr	r1, .L26
 574 0330 FFF7FEFF 		bl	GPIO_Init
 147:../src/lcd.c  **** 
 148:../src/lcd.c  ****     LCM_OUT &= ~(LCM_PIN_MASK);
 575              		.loc 1 148 0
 576 0334 2B4B     		ldr	r3, .L26+4
 577 0336 2B4A     		ldr	r2, .L26+4
 578 0338 5269     		ldr	r2, [r2, #20]
 579 033a 22F47E72 		bic	r2, r2, #1016
 580 033e 5A61     		str	r2, [r3, #20]
 149:../src/lcd.c  **** 
 150:../src/lcd.c  ****     __delay_cycles(32000);
 581              		.loc 1 150 0
 582 0340 4FF4FA40 		mov	r0, #32000
 583 0344 FFF7FEFF 		bl	__delay_cycles
 151:../src/lcd.c  ****     __delay_cycles(32000);
 584              		.loc 1 151 0
 585 0348 4FF4FA40 		mov	r0, #32000
 586 034c FFF7FEFF 		bl	__delay_cycles
 152:../src/lcd.c  ****     __delay_cycles(32000);
 587              		.loc 1 152 0
 588 0350 4FF4FA40 		mov	r0, #32000
 589 0354 FFF7FEFF 		bl	__delay_cycles
 153:../src/lcd.c  **** 
 154:../src/lcd.c  ****     LCM_OUT &= ~LCM_PIN_RS;
 590              		.loc 1 154 0
 591 0358 224B     		ldr	r3, .L26+4
 592 035a 224A     		ldr	r2, .L26+4
 593 035c 5269     		ldr	r2, [r2, #20]
 594 035e 22F00802 		bic	r2, r2, #8
 595 0362 5A61     		str	r2, [r3, #20]
 155:../src/lcd.c  ****     LCM_OUT &= ~LCM_PIN_EN;
 596              		.loc 1 155 0
 597 0364 1F4B     		ldr	r3, .L26+4
 598 0366 1F4A     		ldr	r2, .L26+4
 599 0368 5269     		ldr	r2, [r2, #20]
 600 036a 22F48072 		bic	r2, r2, #256
 601 036e 5A61     		str	r2, [r3, #20]
 156:../src/lcd.c  **** 
 157:../src/lcd.c  ****     LCM_OUT = 0x20;
 602              		.loc 1 157 0
 603 0370 1C4B     		ldr	r3, .L26+4
 604 0372 4FF02002 		mov	r2, #32
 605 0376 5A61     		str	r2, [r3, #20]
 158:../src/lcd.c  ****     PulseLcm();
 606              		.loc 1 158 0
 607 0378 FFF7FEFF 		bl	PulseLcm
 159:../src/lcd.c  ****     __delay_cycles(32000);
 608              		.loc 1 159 0
 609 037c 4FF4FA40 		mov	r0, #32000
 610 0380 FFF7FEFF 		bl	__delay_cycles
 160:../src/lcd.c  ****     LCM_OUT = 0x20;
 611              		.loc 1 160 0
 612 0384 174B     		ldr	r3, .L26+4
 613 0386 4FF02002 		mov	r2, #32
 614 038a 5A61     		str	r2, [r3, #20]
 161:../src/lcd.c  ****     PulseLcm();
 615              		.loc 1 161 0
 616 038c FFF7FEFF 		bl	PulseLcm
 162:../src/lcd.c  ****     __delay_cycles(32000);
 617              		.loc 1 162 0
 618 0390 4FF4FA40 		mov	r0, #32000
 619 0394 FFF7FEFF 		bl	__delay_cycles
 163:../src/lcd.c  ****     LCM_OUT = 0x20;
 620              		.loc 1 163 0
 621 0398 124B     		ldr	r3, .L26+4
 622 039a 4FF02002 		mov	r2, #32
 623 039e 5A61     		str	r2, [r3, #20]
 164:../src/lcd.c  ****     PulseLcm();
 624              		.loc 1 164 0
 625 03a0 FFF7FEFF 		bl	PulseLcm
 165:../src/lcd.c  ****     __delay_cycles(32000);
 626              		.loc 1 165 0
 627 03a4 4FF4FA40 		mov	r0, #32000
 628 03a8 FFF7FEFF 		bl	__delay_cycles
 166:../src/lcd.c  **** 
 167:../src/lcd.c  ****     SendByte(0x28, FALSE);
 629              		.loc 1 167 0
 630 03ac 4FF02800 		mov	r0, #40
 631 03b0 4FF00001 		mov	r1, #0
 632 03b4 FFF7FEFF 		bl	SendByte
 168:../src/lcd.c  ****     SendByte(0x0E, FALSE);
 633              		.loc 1 168 0
 634 03b8 4FF00E00 		mov	r0, #14
 635 03bc 4FF00001 		mov	r1, #0
 636 03c0 FFF7FEFF 		bl	SendByte
 169:../src/lcd.c  ****     SendByte(0x01, FALSE);
 637              		.loc 1 169 0
 638 03c4 4FF00100 		mov	r0, #1
 639 03c8 4FF00001 		mov	r1, #0
 640 03cc FFF7FEFF 		bl	SendByte
 170:../src/lcd.c  ****     SendByte(0x06, FALSE);
 641              		.loc 1 170 0
 642 03d0 4FF00600 		mov	r0, #6
 643 03d4 4FF00001 		mov	r1, #0
 644 03d8 FFF7FEFF 		bl	SendByte
 171:../src/lcd.c  **** }
 645              		.loc 1 171 0
 646 03dc 80BD     		pop	{r7, pc}
 647              	.L27:
 648 03de 00BF     		.align	2
 649              	.L26:
 650 03e0 00000000 		.word	GPIO_InitStructure
 651 03e4 00100240 		.word	1073876992
 652              		.cfi_endproc
 653              	.LFE116:
 655              		.align	2
 656              		.global	StrAlign
 657              		.thumb
 658              		.thumb_func
 660              	StrAlign:
 661              	.LFB117:
 172:../src/lcd.c  **** void StrAlign(char * Text, char * Temp, char Mode)
 173:../src/lcd.c  **** {
 662              		.loc 1 173 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 24
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 03e8 80B4     		push	{r7}
 668              	.LCFI18:
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 03ea 87B0     		sub	sp, sp, #28
 672              	.LCFI19:
 673              		.cfi_def_cfa_offset 32
 674 03ec 00AF     		add	r7, sp, #0
 675              	.LCFI20:
 676              		.cfi_def_cfa_register 7
 677 03ee F860     		str	r0, [r7, #12]
 678 03f0 B960     		str	r1, [r7, #8]
 679 03f2 1346     		mov	r3, r2
 680 03f4 FB71     		strb	r3, [r7, #7]
 174:../src/lcd.c  ****     char i = 0, j = 0, k = 0;
 681              		.loc 1 174 0
 682 03f6 4FF00003 		mov	r3, #0
 683 03fa FB75     		strb	r3, [r7, #23]
 684 03fc 4FF00003 		mov	r3, #0
 685 0400 BB75     		strb	r3, [r7, #22]
 686 0402 4FF00003 		mov	r3, #0
 687 0406 7B75     		strb	r3, [r7, #21]
 175:../src/lcd.c  ****     switch(Mode)
 688              		.loc 1 175 0
 689 0408 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 690 040a 03F1FF33 		add	r3, r3, #-1
 691 040e 032B     		cmp	r3, #3
 692 0410 00F22481 		bhi	.L60
 693 0414 01A2     		adr	r2, .L34
 694 0416 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 695 041a 00BF     		.align	2
 696              	.L34:
 697 041c 2D040000 		.word	.L30+1
 698 0420 83040000 		.word	.L31+1
 699 0424 09050000 		.word	.L32+1
 700 0428 C3050000 		.word	.L33+1
 701              	.L30:
 176:../src/lcd.c  ****     {
 177:../src/lcd.c  ****     case 1:
 178:../src/lcd.c  ****         for(i=0; Text[i] != '\0'; i++)
 702              		.loc 1 178 0
 703 042c 4FF00003 		mov	r3, #0
 704 0430 FB75     		strb	r3, [r7, #23]
 705 0432 0BE0     		b	.L35
 706              	.L36:
 179:../src/lcd.c  ****             Temp[i] = Text[i];
 707              		.loc 1 179 0 discriminator 2
 708 0434 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 709 0436 BA68     		ldr	r2, [r7, #8]
 710 0438 D318     		adds	r3, r2, r3
 711 043a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 712 043c F968     		ldr	r1, [r7, #12]
 713 043e 8A18     		adds	r2, r1, r2
 714 0440 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 715 0442 1A70     		strb	r2, [r3, #0]
 178:../src/lcd.c  ****         for(i=0; Text[i] != '\0'; i++)
 716              		.loc 1 178 0 discriminator 2
 717 0444 FB7D     		ldrb	r3, [r7, #23]
 718 0446 03F10103 		add	r3, r3, #1
 719 044a FB75     		strb	r3, [r7, #23]
 720              	.L35:
 178:../src/lcd.c  ****         for(i=0; Text[i] != '\0'; i++)
 721              		.loc 1 178 0 is_stmt 0 discriminator 1
 722 044c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 723 044e FA68     		ldr	r2, [r7, #12]
 724 0450 D318     		adds	r3, r2, r3
 725 0452 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 726 0454 002B     		cmp	r3, #0
 727 0456 EDD1     		bne	.L36
 180:../src/lcd.c  **** 
 181:../src/lcd.c  ****         for(i; i < 16; i++)
 728              		.loc 1 181 0 is_stmt 1
 729 0458 09E0     		b	.L37
 730              	.L38:
 182:../src/lcd.c  ****             Temp[i] = ' ';
 731              		.loc 1 182 0 discriminator 2
 732 045a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 733 045c BA68     		ldr	r2, [r7, #8]
 734 045e D318     		adds	r3, r2, r3
 735 0460 4FF02002 		mov	r2, #32
 736 0464 1A70     		strb	r2, [r3, #0]
 181:../src/lcd.c  ****         for(i; i < 16; i++)
 737              		.loc 1 181 0 discriminator 2
 738 0466 FB7D     		ldrb	r3, [r7, #23]
 739 0468 03F10103 		add	r3, r3, #1
 740 046c FB75     		strb	r3, [r7, #23]
 741              	.L37:
 181:../src/lcd.c  ****         for(i; i < 16; i++)
 742              		.loc 1 181 0 is_stmt 0 discriminator 1
 743 046e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 744 0470 0F2B     		cmp	r3, #15
 745 0472 F2D9     		bls	.L38
 183:../src/lcd.c  ****         Temp[16] = '\0';
 746              		.loc 1 183 0 is_stmt 1
 747 0474 BB68     		ldr	r3, [r7, #8]
 748 0476 03F11003 		add	r3, r3, #16
 749 047a 4FF00002 		mov	r2, #0
 750 047e 1A70     		strb	r2, [r3, #0]
 184:../src/lcd.c  ****         break;
 751              		.loc 1 184 0
 752 0480 EDE0     		b	.L28
 753              	.L31:
 185:../src/lcd.c  ****     case 2:
 186:../src/lcd.c  ****         for(i=0; Text[i]!='\0'; i++);
 754              		.loc 1 186 0
 755 0482 4FF00003 		mov	r3, #0
 756 0486 FB75     		strb	r3, [r7, #23]
 757 0488 03E0     		b	.L40
 758              	.L41:
 759              		.loc 1 186 0 is_stmt 0 discriminator 2
 760 048a FB7D     		ldrb	r3, [r7, #23]
 761 048c 03F10103 		add	r3, r3, #1
 762 0490 FB75     		strb	r3, [r7, #23]
 763              	.L40:
 764              		.loc 1 186 0 discriminator 1
 765 0492 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 766 0494 FA68     		ldr	r2, [r7, #12]
 767 0496 D318     		adds	r3, r2, r3
 768 0498 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 769 049a 002B     		cmp	r3, #0
 770 049c F5D1     		bne	.L41
 187:../src/lcd.c  ****         for(j=0; j < (16-i); j++)
 771              		.loc 1 187 0 is_stmt 1
 772 049e 4FF00003 		mov	r3, #0
 773 04a2 BB75     		strb	r3, [r7, #22]
 774 04a4 09E0     		b	.L42
 775              	.L43:
 188:../src/lcd.c  ****             Temp[j] = ' ';
 776              		.loc 1 188 0 discriminator 2
 777 04a6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 778 04a8 BA68     		ldr	r2, [r7, #8]
 779 04aa D318     		adds	r3, r2, r3
 780 04ac 4FF02002 		mov	r2, #32
 781 04b0 1A70     		strb	r2, [r3, #0]
 187:../src/lcd.c  ****         for(j=0; j < (16-i); j++)
 782              		.loc 1 187 0 discriminator 2
 783 04b2 BB7D     		ldrb	r3, [r7, #22]
 784 04b4 03F10103 		add	r3, r3, #1
 785 04b8 BB75     		strb	r3, [r7, #22]
 786              	.L42:
 187:../src/lcd.c  ****         for(j=0; j < (16-i); j++)
 787              		.loc 1 187 0 is_stmt 0 discriminator 1
 788 04ba BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 789 04bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 790 04be C3F11003 		rsb	r3, r3, #16
 791 04c2 9A42     		cmp	r2, r3
 792 04c4 EFDB     		blt	.L43
 189:../src/lcd.c  ****         for(j=0; j<i; j++)
 793              		.loc 1 189 0 is_stmt 1
 794 04c6 4FF00003 		mov	r3, #0
 795 04ca BB75     		strb	r3, [r7, #22]
 796 04cc 11E0     		b	.L44
 797              	.L45:
 190:../src/lcd.c  ****             Temp[(15-j)] = Text[(i-1-j)];
 798              		.loc 1 190 0 discriminator 2
 799 04ce BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 800 04d0 C3F10F03 		rsb	r3, r3, #15
 801 04d4 BA68     		ldr	r2, [r7, #8]
 802 04d6 D318     		adds	r3, r2, r3
 803 04d8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 804 04da 02F1FF31 		add	r1, r2, #-1
 805 04de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 806 04e0 8A1A     		subs	r2, r1, r2
 807 04e2 F968     		ldr	r1, [r7, #12]
 808 04e4 8A18     		adds	r2, r1, r2
 809 04e6 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 810 04e8 1A70     		strb	r2, [r3, #0]
 189:../src/lcd.c  ****         for(j=0; j<i; j++)
 811              		.loc 1 189 0 discriminator 2
 812 04ea BB7D     		ldrb	r3, [r7, #22]
 813 04ec 03F10103 		add	r3, r3, #1
 814 04f0 BB75     		strb	r3, [r7, #22]
 815              	.L44:
 189:../src/lcd.c  ****         for(j=0; j<i; j++)
 816              		.loc 1 189 0 is_stmt 0 discriminator 1
 817 04f2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 818 04f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 819 04f6 9A42     		cmp	r2, r3
 820 04f8 E9D3     		bcc	.L45
 191:../src/lcd.c  ****         Temp[16] = '\0';
 821              		.loc 1 191 0 is_stmt 1
 822 04fa BB68     		ldr	r3, [r7, #8]
 823 04fc 03F11003 		add	r3, r3, #16
 824 0500 4FF00002 		mov	r2, #0
 825 0504 1A70     		strb	r2, [r3, #0]
 192:../src/lcd.c  ****         break;
 826              		.loc 1 192 0
 827 0506 AAE0     		b	.L28
 828              	.L32:
 193:../src/lcd.c  ****     case 3:
 194:../src/lcd.c  ****         for(i=0; Text[i] != '\0'; i++);
 829              		.loc 1 194 0
 830 0508 4FF00003 		mov	r3, #0
 831 050c FB75     		strb	r3, [r7, #23]
 832 050e 03E0     		b	.L46
 833              	.L47:
 834              		.loc 1 194 0 is_stmt 0 discriminator 2
 835 0510 FB7D     		ldrb	r3, [r7, #23]
 836 0512 03F10103 		add	r3, r3, #1
 837 0516 FB75     		strb	r3, [r7, #23]
 838              	.L46:
 839              		.loc 1 194 0 discriminator 1
 840 0518 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 841 051a FA68     		ldr	r2, [r7, #12]
 842 051c D318     		adds	r3, r2, r3
 843 051e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 844 0520 002B     		cmp	r3, #0
 845 0522 F5D1     		bne	.L47
 195:../src/lcd.c  ****         j = ((16-i) >> 1);
 846              		.loc 1 195 0 is_stmt 1
 847 0524 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 848 0526 C3F11003 		rsb	r3, r3, #16
 849 052a 4FEA6303 		asr	r3, r3, #1
 850 052e BB75     		strb	r3, [r7, #22]
 196:../src/lcd.c  ****         for(k=0; k<i; k++)
 851              		.loc 1 196 0
 852 0530 4FF00003 		mov	r3, #0
 853 0534 7B75     		strb	r3, [r7, #21]
 854 0536 15E0     		b	.L48
 855              	.L49:
 197:../src/lcd.c  ****             Temp[j + i - 1 - k] = Text [i - 1 - k];
 856              		.loc 1 197 0 discriminator 2
 857 0538 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 858 053a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 859 053c D318     		adds	r3, r2, r3
 860 053e 03F1FF32 		add	r2, r3, #-1
 861 0542 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 862 0544 D31A     		subs	r3, r2, r3
 863 0546 BA68     		ldr	r2, [r7, #8]
 864 0548 D318     		adds	r3, r2, r3
 865 054a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 866 054c 02F1FF31 		add	r1, r2, #-1
 867 0550 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 868 0552 8A1A     		subs	r2, r1, r2
 869 0554 F968     		ldr	r1, [r7, #12]
 870 0556 8A18     		adds	r2, r1, r2
 871 0558 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 872 055a 1A70     		strb	r2, [r3, #0]
 196:../src/lcd.c  ****         for(k=0; k<i; k++)
 873              		.loc 1 196 0 discriminator 2
 874 055c 7B7D     		ldrb	r3, [r7, #21]
 875 055e 03F10103 		add	r3, r3, #1
 876 0562 7B75     		strb	r3, [r7, #21]
 877              	.L48:
 196:../src/lcd.c  ****         for(k=0; k<i; k++)
 878              		.loc 1 196 0 is_stmt 0 discriminator 1
 879 0564 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 880 0566 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 881 0568 9A42     		cmp	r2, r3
 882 056a E5D3     		bcc	.L49
 198:../src/lcd.c  ****         for(k=0; k<j; k++)
 883              		.loc 1 198 0 is_stmt 1
 884 056c 4FF00003 		mov	r3, #0
 885 0570 7B75     		strb	r3, [r7, #21]
 886 0572 09E0     		b	.L50
 887              	.L51:
 199:../src/lcd.c  ****             Temp[k] = ' ';
 888              		.loc 1 199 0 discriminator 2
 889 0574 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 890 0576 BA68     		ldr	r2, [r7, #8]
 891 0578 D318     		adds	r3, r2, r3
 892 057a 4FF02002 		mov	r2, #32
 893 057e 1A70     		strb	r2, [r3, #0]
 198:../src/lcd.c  ****         for(k=0; k<j; k++)
 894              		.loc 1 198 0 discriminator 2
 895 0580 7B7D     		ldrb	r3, [r7, #21]
 896 0582 03F10103 		add	r3, r3, #1
 897 0586 7B75     		strb	r3, [r7, #21]
 898              	.L50:
 198:../src/lcd.c  ****         for(k=0; k<j; k++)
 899              		.loc 1 198 0 is_stmt 0 discriminator 1
 900 0588 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 901 058a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 902 058c 9A42     		cmp	r2, r3
 903 058e F1D3     		bcc	.L51
 200:../src/lcd.c  ****         for(k = (i+j); k<16; k++)
 904              		.loc 1 200 0 is_stmt 1
 905 0590 FA7D     		ldrb	r2, [r7, #23]
 906 0592 BB7D     		ldrb	r3, [r7, #22]
 907 0594 D318     		adds	r3, r2, r3
 908 0596 7B75     		strb	r3, [r7, #21]
 909 0598 09E0     		b	.L52
 910              	.L53:
 201:../src/lcd.c  ****             Temp[k] = ' ';
 911              		.loc 1 201 0 discriminator 2
 912 059a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 913 059c BA68     		ldr	r2, [r7, #8]
 914 059e D318     		adds	r3, r2, r3
 915 05a0 4FF02002 		mov	r2, #32
 916 05a4 1A70     		strb	r2, [r3, #0]
 200:../src/lcd.c  ****         for(k = (i+j); k<16; k++)
 917              		.loc 1 200 0 discriminator 2
 918 05a6 7B7D     		ldrb	r3, [r7, #21]
 919 05a8 03F10103 		add	r3, r3, #1
 920 05ac 7B75     		strb	r3, [r7, #21]
 921              	.L52:
 200:../src/lcd.c  ****         for(k = (i+j); k<16; k++)
 922              		.loc 1 200 0 is_stmt 0 discriminator 1
 923 05ae 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 924 05b0 0F2B     		cmp	r3, #15
 925 05b2 F2D9     		bls	.L53
 202:../src/lcd.c  ****         Temp[16] = '\0';
 926              		.loc 1 202 0 is_stmt 1
 927 05b4 BB68     		ldr	r3, [r7, #8]
 928 05b6 03F11003 		add	r3, r3, #16
 929 05ba 4FF00002 		mov	r2, #0
 930 05be 1A70     		strb	r2, [r3, #0]
 203:../src/lcd.c  ****         break;
 931              		.loc 1 203 0
 932 05c0 4DE0     		b	.L28
 933              	.L33:
 204:../src/lcd.c  ****     case 4:
 205:../src/lcd.c  ****         for(i=0; Text[i] != '\0'; i++);
 934              		.loc 1 205 0
 935 05c2 4FF00003 		mov	r3, #0
 936 05c6 FB75     		strb	r3, [r7, #23]
 937 05c8 03E0     		b	.L54
 938              	.L55:
 939              		.loc 1 205 0 is_stmt 0 discriminator 2
 940 05ca FB7D     		ldrb	r3, [r7, #23]
 941 05cc 03F10103 		add	r3, r3, #1
 942 05d0 FB75     		strb	r3, [r7, #23]
 943              	.L54:
 944              		.loc 1 205 0 discriminator 1
 945 05d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 946 05d4 FA68     		ldr	r2, [r7, #12]
 947 05d6 D318     		adds	r3, r2, r3
 948 05d8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 949 05da 002B     		cmp	r3, #0
 950 05dc F5D1     		bne	.L55
 206:../src/lcd.c  ****         for(k=0; k<i; k++)
 951              		.loc 1 206 0 is_stmt 1
 952 05de 4FF00003 		mov	r3, #0
 953 05e2 7B75     		strb	r3, [r7, #21]
 954 05e4 13E0     		b	.L56
 955              	.L57:
 207:../src/lcd.c  ****             Temp[2 + i - 1 - k] = Text [i - 1 - k];
 956              		.loc 1 207 0 discriminator 2
 957 05e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 958 05e8 03F10102 		add	r2, r3, #1
 959 05ec 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 960 05ee D31A     		subs	r3, r2, r3
 961 05f0 BA68     		ldr	r2, [r7, #8]
 962 05f2 D318     		adds	r3, r2, r3
 963 05f4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 964 05f6 02F1FF31 		add	r1, r2, #-1
 965 05fa 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 966 05fc 8A1A     		subs	r2, r1, r2
 967 05fe F968     		ldr	r1, [r7, #12]
 968 0600 8A18     		adds	r2, r1, r2
 969 0602 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 970 0604 1A70     		strb	r2, [r3, #0]
 206:../src/lcd.c  ****         for(k=0; k<i; k++)
 971              		.loc 1 206 0 discriminator 2
 972 0606 7B7D     		ldrb	r3, [r7, #21]
 973 0608 03F10103 		add	r3, r3, #1
 974 060c 7B75     		strb	r3, [r7, #21]
 975              	.L56:
 206:../src/lcd.c  ****         for(k=0; k<i; k++)
 976              		.loc 1 206 0 is_stmt 0 discriminator 1
 977 060e 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 978 0610 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 979 0612 9A42     		cmp	r2, r3
 980 0614 E7D3     		bcc	.L57
 208:../src/lcd.c  ****         for(k = (i+2); k<16; k++)
 981              		.loc 1 208 0 is_stmt 1
 982 0616 FB7D     		ldrb	r3, [r7, #23]
 983 0618 03F10203 		add	r3, r3, #2
 984 061c 7B75     		strb	r3, [r7, #21]
 985 061e 09E0     		b	.L58
 986              	.L59:
 209:../src/lcd.c  ****             Temp[k] = ' ';
 987              		.loc 1 209 0 discriminator 2
 988 0620 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 989 0622 BA68     		ldr	r2, [r7, #8]
 990 0624 D318     		adds	r3, r2, r3
 991 0626 4FF02002 		mov	r2, #32
 992 062a 1A70     		strb	r2, [r3, #0]
 208:../src/lcd.c  ****         for(k = (i+2); k<16; k++)
 993              		.loc 1 208 0 discriminator 2
 994 062c 7B7D     		ldrb	r3, [r7, #21]
 995 062e 03F10103 		add	r3, r3, #1
 996 0632 7B75     		strb	r3, [r7, #21]
 997              	.L58:
 208:../src/lcd.c  ****         for(k = (i+2); k<16; k++)
 998              		.loc 1 208 0 is_stmt 0 discriminator 1
 999 0634 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1000 0636 0F2B     		cmp	r3, #15
 1001 0638 F2D9     		bls	.L59
 210:../src/lcd.c  ****         Temp[0] = '-';
 1002              		.loc 1 210 0 is_stmt 1
 1003 063a BB68     		ldr	r3, [r7, #8]
 1004 063c 4FF02D02 		mov	r2, #45
 1005 0640 1A70     		strb	r2, [r3, #0]
 211:../src/lcd.c  ****         Temp[1] = '>';
 1006              		.loc 1 211 0
 1007 0642 BB68     		ldr	r3, [r7, #8]
 1008 0644 03F10103 		add	r3, r3, #1
 1009 0648 4FF03E02 		mov	r2, #62
 1010 064c 1A70     		strb	r2, [r3, #0]
 212:../src/lcd.c  ****         Temp[16] = '\0';
 1011              		.loc 1 212 0
 1012 064e BB68     		ldr	r3, [r7, #8]
 1013 0650 03F11003 		add	r3, r3, #16
 1014 0654 4FF00002 		mov	r2, #0
 1015 0658 1A70     		strb	r2, [r3, #0]
 213:../src/lcd.c  ****         break;
 1016              		.loc 1 213 0
 1017 065a 00E0     		b	.L28
 1018              	.L60:
 214:../src/lcd.c  ****     default:
 215:../src/lcd.c  ****         break;
 1019              		.loc 1 215 0
 1020 065c 00BF     		nop
 1021              	.L28:
 216:../src/lcd.c  ****     }
 217:../src/lcd.c  **** }
 1022              		.loc 1 217 0
 1023 065e 07F11C07 		add	r7, r7, #28
 1024 0662 BD46     		mov	sp, r7
 1025 0664 80BC     		pop	{r7}
 1026 0666 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE117:
 1030              		.align	2
 1031              		.global	PrintStr
 1032              		.thumb
 1033              		.thumb_func
 1035              	PrintStr:
 1036              	.LFB118:
 218:../src/lcd.c  **** 
 219:../src/lcd.c  **** void PrintStr(char * Text)
 220:../src/lcd.c  **** {
 1037              		.loc 1 220 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 16
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0668 80B5     		push	{r7, lr}
 1042              	.LCFI21:
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 066a 84B0     		sub	sp, sp, #16
 1047              	.LCFI22:
 1048              		.cfi_def_cfa_offset 24
 1049 066c 00AF     		add	r7, sp, #0
 1050              	.LCFI23:
 1051              		.cfi_def_cfa_register 7
 1052 066e 7860     		str	r0, [r7, #4]
 221:../src/lcd.c  ****     char *c;
 222:../src/lcd.c  **** 
 223:../src/lcd.c  ****     c = Text;
 1053              		.loc 1 223 0
 1054 0670 7B68     		ldr	r3, [r7, #4]
 1055 0672 FB60     		str	r3, [r7, #12]
 224:../src/lcd.c  **** 
 225:../src/lcd.c  ****     while ((c != 0) && (*c != 0))
 1056              		.loc 1 225 0
 1057 0674 0AE0     		b	.L62
 1058              	.L64:
 226:../src/lcd.c  ****     {
 227:../src/lcd.c  ****         SendByte(*c, TRUE);
 1059              		.loc 1 227 0
 1060 0676 FB68     		ldr	r3, [r7, #12]
 1061 0678 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1062 067a 1846     		mov	r0, r3
 1063 067c 4FF00101 		mov	r1, #1
 1064 0680 FFF7FEFF 		bl	SendByte
 228:../src/lcd.c  ****         c++;
 1065              		.loc 1 228 0
 1066 0684 FB68     		ldr	r3, [r7, #12]
 1067 0686 03F10103 		add	r3, r3, #1
 1068 068a FB60     		str	r3, [r7, #12]
 1069              	.L62:
 225:../src/lcd.c  ****     while ((c != 0) && (*c != 0))
 1070              		.loc 1 225 0 discriminator 1
 1071 068c FB68     		ldr	r3, [r7, #12]
 1072 068e 002B     		cmp	r3, #0
 1073 0690 03D0     		beq	.L63
 225:../src/lcd.c  ****     while ((c != 0) && (*c != 0))
 1074              		.loc 1 225 0 is_stmt 0 discriminator 2
 1075 0692 FB68     		ldr	r3, [r7, #12]
 1076 0694 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1077 0696 002B     		cmp	r3, #0
 1078 0698 EDD1     		bne	.L64
 1079              	.L63:
 229:../src/lcd.c  ****     }
 230:../src/lcd.c  ****     __delay_cycles(4000);
 1080              		.loc 1 230 0 is_stmt 1
 1081 069a 4FF47A60 		mov	r0, #4000
 1082 069e FFF7FEFF 		bl	__delay_cycles
 231:../src/lcd.c  **** }
 1083              		.loc 1 231 0
 1084 06a2 07F11007 		add	r7, r7, #16
 1085 06a6 BD46     		mov	sp, r7
 1086 06a8 80BD     		pop	{r7, pc}
 1087              		.cfi_endproc
 1088              	.LFE118:
 1090 06aa 00BF     		.align	2
 1091              		.global	dec2bcd
 1092              		.thumb
 1093              		.thumb_func
 1095              	dec2bcd:
 1096              	.LFB119:
 232:../src/lcd.c  **** 
 233:../src/lcd.c  **** void dec2bcd(int value, char * temp) {
 1097              		.loc 1 233 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 16
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 1102 06ac 80B4     		push	{r7}
 1103              	.LCFI24:
 1104              		.cfi_def_cfa_offset 4
 1105              		.cfi_offset 7, -4
 1106 06ae 85B0     		sub	sp, sp, #20
 1107              	.LCFI25:
 1108              		.cfi_def_cfa_offset 24
 1109 06b0 00AF     		add	r7, sp, #0
 1110              	.LCFI26:
 1111              		.cfi_def_cfa_register 7
 1112 06b2 7860     		str	r0, [r7, #4]
 1113 06b4 3960     		str	r1, [r7, #0]
 234:../src/lcd.c  ****     char i=0, j=0, k=0;
 1114              		.loc 1 234 0
 1115 06b6 4FF00003 		mov	r3, #0
 1116 06ba FB73     		strb	r3, [r7, #15]
 1117 06bc 4FF00003 		mov	r3, #0
 1118 06c0 BB73     		strb	r3, [r7, #14]
 1119 06c2 4FF00003 		mov	r3, #0
 1120 06c6 7B73     		strb	r3, [r7, #13]
 235:../src/lcd.c  ****     int divider = 1000000000;
 1121              		.loc 1 235 0
 1122 06c8 264B     		ldr	r3, .L70
 1123 06ca BB60     		str	r3, [r7, #8]
 236:../src/lcd.c  ****        for(i = 10; i > 0; i--) {
 1124              		.loc 1 236 0
 1125 06cc 4FF00A03 		mov	r3, #10
 1126 06d0 FB73     		strb	r3, [r7, #15]
 1127 06d2 3FE0     		b	.L66
 1128              	.L69:
 237:../src/lcd.c  ****                temp[(10-i)] = (char)(value/divider);
 1129              		.loc 1 237 0
 1130 06d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1131 06d6 C3F10A03 		rsb	r3, r3, #10
 1132 06da 3A68     		ldr	r2, [r7, #0]
 1133 06dc D318     		adds	r3, r2, r3
 1134 06de 7968     		ldr	r1, [r7, #4]
 1135 06e0 BA68     		ldr	r2, [r7, #8]
 1136 06e2 91FBF2F2 		sdiv	r2, r1, r2
 1137 06e6 D2B2     		uxtb	r2, r2
 1138 06e8 1A70     		strb	r2, [r3, #0]
 238:../src/lcd.c  ****                if(temp[(10-i)]==0 && j==0 && k!=9)
 1139              		.loc 1 238 0
 1140 06ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1141 06ec C3F10A03 		rsb	r3, r3, #10
 1142 06f0 3A68     		ldr	r2, [r7, #0]
 1143 06f2 D318     		adds	r3, r2, r3
 1144 06f4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1145 06f6 002B     		cmp	r3, #0
 1146 06f8 0AD1     		bne	.L67
 1147              		.loc 1 238 0 is_stmt 0 discriminator 1
 1148 06fa BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1149 06fc 002B     		cmp	r3, #0
 1150 06fe 07D1     		bne	.L67
 1151 0700 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1152 0702 092B     		cmp	r3, #9
 1153 0704 04D0     		beq	.L67
 239:../src/lcd.c  ****                {k++;}
 1154              		.loc 1 239 0 is_stmt 1
 1155 0706 7B7B     		ldrb	r3, [r7, #13]
 1156 0708 03F10103 		add	r3, r3, #1
 1157 070c 7B73     		strb	r3, [r7, #13]
 1158 070e 07E0     		b	.L68
 1159              	.L67:
 240:../src/lcd.c  ****                else{
 241:../src/lcd.c  ****                j++; k++;}
 1160              		.loc 1 241 0
 1161 0710 BB7B     		ldrb	r3, [r7, #14]
 1162 0712 03F10103 		add	r3, r3, #1
 1163 0716 BB73     		strb	r3, [r7, #14]
 1164 0718 7B7B     		ldrb	r3, [r7, #13]
 1165 071a 03F10103 		add	r3, r3, #1
 1166 071e 7B73     		strb	r3, [r7, #13]
 1167              	.L68:
 242:../src/lcd.c  ****                value -= temp[(10-i)]*divider;
 1168              		.loc 1 242 0
 1169 0720 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1170 0722 C3F10A03 		rsb	r3, r3, #10
 1171 0726 3A68     		ldr	r2, [r7, #0]
 1172 0728 D318     		adds	r3, r2, r3
 1173 072a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1174 072c BA68     		ldr	r2, [r7, #8]
 1175 072e 02FB03F3 		mul	r3, r2, r3
 1176 0732 7A68     		ldr	r2, [r7, #4]
 1177 0734 D31A     		subs	r3, r2, r3
 1178 0736 7B60     		str	r3, [r7, #4]
 243:../src/lcd.c  ****                divider /= 10;
 1179              		.loc 1 243 0
 1180 0738 BB68     		ldr	r3, [r7, #8]
 1181 073a 0B4A     		ldr	r2, .L70+4
 1182 073c 82FB0312 		smull	r1, r2, r2, r3
 1183 0740 4FEAA202 		asr	r2, r2, #2
 1184 0744 4FEAE373 		asr	r3, r3, #31
 1185 0748 D31A     		subs	r3, r2, r3
 1186 074a BB60     		str	r3, [r7, #8]
 236:../src/lcd.c  ****        for(i = 10; i > 0; i--) {
 1187              		.loc 1 236 0
 1188 074c FB7B     		ldrb	r3, [r7, #15]
 1189 074e 03F1FF33 		add	r3, r3, #-1
 1190 0752 FB73     		strb	r3, [r7, #15]
 1191              	.L66:
 236:../src/lcd.c  ****        for(i = 10; i > 0; i--) {
 1192              		.loc 1 236 0 is_stmt 0 discriminator 1
 1193 0754 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1194 0756 002B     		cmp	r3, #0
 1195 0758 BCD1     		bne	.L69
 244:../src/lcd.c  ****        }
 245:../src/lcd.c  **** }
 1196              		.loc 1 245 0 is_stmt 1
 1197 075a 07F11407 		add	r7, r7, #20
 1198 075e BD46     		mov	sp, r7
 1199 0760 80BC     		pop	{r7}
 1200 0762 7047     		bx	lr
 1201              	.L71:
 1202              		.align	2
 1203              	.L70:
 1204 0764 00CA9A3B 		.word	1000000000
 1205 0768 67666666 		.word	1717986919
 1206              		.cfi_endproc
 1207              	.LFE119:
 1209              		.comm	display_fill_menu_temporary,28,4
 1210              		.align	2
 1211              		.global	DisplayFill
 1212              		.thumb
 1213              		.thumb_func
 1215              	DisplayFill:
 1216              	.LFB120:
 246:../src/lcd.c  **** 
 247:../src/lcd.c  **** MenuElement_Typedef display_fill_menu_temporary;
 248:../src/lcd.c  **** extern char temp [17];
 249:../src/lcd.c  **** 
 250:../src/lcd.c  **** void DisplayFill(MenuElement_Typedef menu_current, MenuElement_Typedef menu_first)
 251:../src/lcd.c  **** {
 1217              		.loc 1 251 0
 1218              		.cfi_startproc
 1219              		@ args = 56, pretend = 16, frame = 0
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 076c 84B0     		sub	sp, sp, #16
 1222              	.LCFI27:
 1223              		.cfi_def_cfa_offset 16
 1224 076e B0B5     		push	{r4, r5, r7, lr}
 1225              	.LCFI28:
 1226              		.cfi_def_cfa_offset 32
 1227              		.cfi_offset 4, -32
 1228              		.cfi_offset 5, -28
 1229              		.cfi_offset 7, -24
 1230              		.cfi_offset 14, -20
 1231 0770 00AF     		add	r7, sp, #0
 1232              	.LCFI29:
 1233              		.cfi_def_cfa_register 7
 1234 0772 07F1100C 		add	ip, r7, #16
 1235 0776 8CE80F00 		stmia	ip, {r0, r1, r2, r3}
 252:../src/lcd.c  ****     display_fill_menu_temporary = menu_first;
 1236              		.loc 1 252 0
 1237 077a 9A4B     		ldr	r3, .L79
 1238 077c 1C46     		mov	r4, r3
 1239 077e 07F12C05 		add	r5, r7, #44
 1240 0782 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1241 0784 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1242 0786 95E80700 		ldmia	r5, {r0, r1, r2}
 1243 078a 84E80700 		stmia	r4, {r0, r1, r2}
 253:../src/lcd.c  ****     while(display_fill_menu_temporary.previous)
 1244              		.loc 1 253 0
 1245 078e 0AE0     		b	.L73
 1246              	.L74:
 254:../src/lcd.c  ****         display_fill_menu_temporary = *display_fill_menu_temporary.previous;
 1247              		.loc 1 254 0
 1248 0790 944B     		ldr	r3, .L79
 1249 0792 1B69     		ldr	r3, [r3, #16]
 1250 0794 934A     		ldr	r2, .L79
 1251 0796 1446     		mov	r4, r2
 1252 0798 1D46     		mov	r5, r3
 1253 079a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1254 079c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1255 079e 95E80700 		ldmia	r5, {r0, r1, r2}
 1256 07a2 84E80700 		stmia	r4, {r0, r1, r2}
 1257              	.L73:
 253:../src/lcd.c  ****     while(display_fill_menu_temporary.previous)
 1258              		.loc 1 253 0 discriminator 1
 1259 07a6 8F4B     		ldr	r3, .L79
 1260 07a8 1B69     		ldr	r3, [r3, #16]
 1261 07aa 002B     		cmp	r3, #0
 1262 07ac F0D1     		bne	.L74
 255:../src/lcd.c  ****     display_fill_menu_temporary = *display_fill_menu_temporary.up;
 1263              		.loc 1 255 0
 1264 07ae 8D4B     		ldr	r3, .L79
 1265 07b0 5B69     		ldr	r3, [r3, #20]
 1266 07b2 8C4A     		ldr	r2, .L79
 1267 07b4 1446     		mov	r4, r2
 1268 07b6 1D46     		mov	r5, r3
 1269 07b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1270 07ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1271 07bc 95E80700 		ldmia	r5, {r0, r1, r2}
 1272 07c0 84E80700 		stmia	r4, {r0, r1, r2}
 256:../src/lcd.c  **** 
 257:../src/lcd.c  ****     Cursor(0,0);
 1273              		.loc 1 257 0
 1274 07c4 4FF00000 		mov	r0, #0
 1275 07c8 4FF00001 		mov	r1, #0
 1276 07cc FFF7FEFF 		bl	Cursor
 258:../src/lcd.c  ****     __delay_cycles(40000);
 1277              		.loc 1 258 0
 1278 07d0 49F64040 		movw	r0, #40000
 1279 07d4 FFF7FEFF 		bl	__delay_cycles
 259:../src/lcd.c  ****     StrAlign(display_fill_menu_temporary.nev, temp, ALIGN_CENTER);
 1280              		.loc 1 259 0
 1281 07d8 824B     		ldr	r3, .L79
 1282 07da 1B68     		ldr	r3, [r3, #0]
 1283 07dc 1846     		mov	r0, r3
 1284 07de 8249     		ldr	r1, .L79+4
 1285 07e0 4FF00302 		mov	r2, #3
 1286 07e4 FFF7FEFF 		bl	StrAlign
 260:../src/lcd.c  ****     PrintStr(temp);
 1287              		.loc 1 260 0
 1288 07e8 7F48     		ldr	r0, .L79+4
 1289 07ea FFF7FEFF 		bl	PrintStr
 261:../src/lcd.c  ****     __delay_cycles(4000);
 1290              		.loc 1 261 0
 1291 07ee 4FF47A60 		mov	r0, #4000
 1292 07f2 FFF7FEFF 		bl	__delay_cycles
 262:../src/lcd.c  **** 
 263:../src/lcd.c  ****     Cursor(((menu_current.designator - menu_first.designator) + 1), 0);
 1293              		.loc 1 263 0
 1294 07f6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1295 07f8 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1296 07fc D31A     		subs	r3, r2, r3
 1297 07fe DBB2     		uxtb	r3, r3
 1298 0800 03F10103 		add	r3, r3, #1
 1299 0804 DBB2     		uxtb	r3, r3
 1300 0806 1846     		mov	r0, r3
 1301 0808 4FF00001 		mov	r1, #0
 1302 080c FFF7FEFF 		bl	Cursor
 264:../src/lcd.c  ****     __delay_cycles(40000);
 1303              		.loc 1 264 0
 1304 0810 49F64040 		movw	r0, #40000
 1305 0814 FFF7FEFF 		bl	__delay_cycles
 265:../src/lcd.c  ****     StrAlign(menu_current.nev, temp, ALIGN_ARROW);
 1306              		.loc 1 265 0
 1307 0818 3B69     		ldr	r3, [r7, #16]
 1308 081a 1846     		mov	r0, r3
 1309 081c 7249     		ldr	r1, .L79+4
 1310 081e 4FF00402 		mov	r2, #4
 1311 0822 FFF7FEFF 		bl	StrAlign
 266:../src/lcd.c  ****     PrintStr(temp);
 1312              		.loc 1 266 0
 1313 0826 7048     		ldr	r0, .L79+4
 1314 0828 FFF7FEFF 		bl	PrintStr
 267:../src/lcd.c  ****     __delay_cycles(4000);
 1315              		.loc 1 267 0
 1316 082c 4FF47A60 		mov	r0, #4000
 1317 0830 FFF7FEFF 		bl	__delay_cycles
 268:../src/lcd.c  **** 
 269:../src/lcd.c  ****     if((menu_current.designator - menu_first.designator))
 1318              		.loc 1 269 0
 1319 0834 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1320 0836 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1321 083a 9A42     		cmp	r2, r3
 1322 083c 26D0     		beq	.L75
 270:../src/lcd.c  ****     {
 271:../src/lcd.c  ****         display_fill_menu_temporary = *(menu_current.previous);
 1323              		.loc 1 271 0
 1324 083e 3B6A     		ldr	r3, [r7, #32]
 1325 0840 684A     		ldr	r2, .L79
 1326 0842 1446     		mov	r4, r2
 1327 0844 1D46     		mov	r5, r3
 1328 0846 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1329 0848 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1330 084a 95E80700 		ldmia	r5, {r0, r1, r2}
 1331 084e 84E80700 		stmia	r4, {r0, r1, r2}
 272:../src/lcd.c  ****         Cursor(((menu_current.designator - menu_first.designator)), 0);
 1332              		.loc 1 272 0
 1333 0852 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1334 0854 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1335 0858 D31A     		subs	r3, r2, r3
 1336 085a DBB2     		uxtb	r3, r3
 1337 085c 1846     		mov	r0, r3
 1338 085e 4FF00001 		mov	r1, #0
 1339 0862 FFF7FEFF 		bl	Cursor
 273:../src/lcd.c  ****         __delay_cycles(40000);
 1340              		.loc 1 273 0
 1341 0866 49F64040 		movw	r0, #40000
 1342 086a FFF7FEFF 		bl	__delay_cycles
 274:../src/lcd.c  ****         StrAlign(display_fill_menu_temporary.nev, temp, ALIGN_LEFT);
 1343              		.loc 1 274 0
 1344 086e 5D4B     		ldr	r3, .L79
 1345 0870 1B68     		ldr	r3, [r3, #0]
 1346 0872 1846     		mov	r0, r3
 1347 0874 5C49     		ldr	r1, .L79+4
 1348 0876 4FF00102 		mov	r2, #1
 1349 087a FFF7FEFF 		bl	StrAlign
 275:../src/lcd.c  ****         PrintStr(temp);
 1350              		.loc 1 275 0
 1351 087e 5A48     		ldr	r0, .L79+4
 1352 0880 FFF7FEFF 		bl	PrintStr
 276:../src/lcd.c  ****         __delay_cycles(4000);
 1353              		.loc 1 276 0
 1354 0884 4FF47A60 		mov	r0, #4000
 1355 0888 FFF7FEFF 		bl	__delay_cycles
 1356              	.L75:
 277:../src/lcd.c  ****     }
 278:../src/lcd.c  **** 
 279:../src/lcd.c  ****     if((menu_current.designator - menu_first.designator) == 2)
 1357              		.loc 1 279 0
 1358 088c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1359 088e 1A46     		mov	r2, r3
 1360 0890 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1361 0894 D31A     		subs	r3, r2, r3
 1362 0896 022B     		cmp	r3, #2
 1363 0898 2DD1     		bne	.L76
 280:../src/lcd.c  ****     {
 281:../src/lcd.c  ****         display_fill_menu_temporary = *(menu_current.previous);
 1364              		.loc 1 281 0
 1365 089a 3B6A     		ldr	r3, [r7, #32]
 1366 089c 514A     		ldr	r2, .L79
 1367 089e 1446     		mov	r4, r2
 1368 08a0 1D46     		mov	r5, r3
 1369 08a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1370 08a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1371 08a6 95E80700 		ldmia	r5, {r0, r1, r2}
 1372 08aa 84E80700 		stmia	r4, {r0, r1, r2}
 282:../src/lcd.c  ****         display_fill_menu_temporary = *(display_fill_menu_temporary.previous);
 1373              		.loc 1 282 0
 1374 08ae 4D4B     		ldr	r3, .L79
 1375 08b0 1B69     		ldr	r3, [r3, #16]
 1376 08b2 4C4A     		ldr	r2, .L79
 1377 08b4 1446     		mov	r4, r2
 1378 08b6 1D46     		mov	r5, r3
 1379 08b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1380 08ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1381 08bc 95E80700 		ldmia	r5, {r0, r1, r2}
 1382 08c0 84E80700 		stmia	r4, {r0, r1, r2}
 283:../src/lcd.c  **** 
 284:../src/lcd.c  ****         Cursor(1, 0);
 1383              		.loc 1 284 0
 1384 08c4 4FF00100 		mov	r0, #1
 1385 08c8 4FF00001 		mov	r1, #0
 1386 08cc FFF7FEFF 		bl	Cursor
 285:../src/lcd.c  ****         __delay_cycles(40000);
 1387              		.loc 1 285 0
 1388 08d0 49F64040 		movw	r0, #40000
 1389 08d4 FFF7FEFF 		bl	__delay_cycles
 286:../src/lcd.c  ****         StrAlign(display_fill_menu_temporary.nev, temp, ALIGN_LEFT);
 1390              		.loc 1 286 0
 1391 08d8 424B     		ldr	r3, .L79
 1392 08da 1B68     		ldr	r3, [r3, #0]
 1393 08dc 1846     		mov	r0, r3
 1394 08de 4249     		ldr	r1, .L79+4
 1395 08e0 4FF00102 		mov	r2, #1
 1396 08e4 FFF7FEFF 		bl	StrAlign
 287:../src/lcd.c  ****         PrintStr(temp);
 1397              		.loc 1 287 0
 1398 08e8 3F48     		ldr	r0, .L79+4
 1399 08ea FFF7FEFF 		bl	PrintStr
 288:../src/lcd.c  ****         __delay_cycles(4000);
 1400              		.loc 1 288 0
 1401 08ee 4FF47A60 		mov	r0, #4000
 1402 08f2 FFF7FEFF 		bl	__delay_cycles
 1403              	.L76:
 289:../src/lcd.c  ****     }
 290:../src/lcd.c  **** 
 291:../src/lcd.c  ****     if(((menu_current.designator - menu_first.designator) + 1) < 3)
 1404              		.loc 1 291 0
 1405 08f6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1406 08f8 1A46     		mov	r2, r3
 1407 08fa 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1408 08fe D31A     		subs	r3, r2, r3
 1409 0900 03F10103 		add	r3, r3, #1
 1410 0904 022B     		cmp	r3, #2
 1411 0906 29DC     		bgt	.L77
 292:../src/lcd.c  ****     {
 293:../src/lcd.c  ****         display_fill_menu_temporary = *(menu_current.next);
 1412              		.loc 1 293 0
 1413 0908 FB69     		ldr	r3, [r7, #28]
 1414 090a 364A     		ldr	r2, .L79
 1415 090c 1446     		mov	r4, r2
 1416 090e 1D46     		mov	r5, r3
 1417 0910 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1418 0912 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1419 0914 95E80700 		ldmia	r5, {r0, r1, r2}
 1420 0918 84E80700 		stmia	r4, {r0, r1, r2}
 294:../src/lcd.c  ****         Cursor(((menu_current.designator - menu_first.designator) + 2), 0);
 1421              		.loc 1 294 0
 1422 091c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1423 091e 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1424 0922 D31A     		subs	r3, r2, r3
 1425 0924 DBB2     		uxtb	r3, r3
 1426 0926 03F10203 		add	r3, r3, #2
 1427 092a DBB2     		uxtb	r3, r3
 1428 092c 1846     		mov	r0, r3
 1429 092e 4FF00001 		mov	r1, #0
 1430 0932 FFF7FEFF 		bl	Cursor
 295:../src/lcd.c  ****         __delay_cycles(40000);
 1431              		.loc 1 295 0
 1432 0936 49F64040 		movw	r0, #40000
 1433 093a FFF7FEFF 		bl	__delay_cycles
 296:../src/lcd.c  ****         StrAlign(display_fill_menu_temporary.nev, temp, ALIGN_LEFT);
 1434              		.loc 1 296 0
 1435 093e 294B     		ldr	r3, .L79
 1436 0940 1B68     		ldr	r3, [r3, #0]
 1437 0942 1846     		mov	r0, r3
 1438 0944 2849     		ldr	r1, .L79+4
 1439 0946 4FF00102 		mov	r2, #1
 1440 094a FFF7FEFF 		bl	StrAlign
 297:../src/lcd.c  ****         PrintStr(temp);
 1441              		.loc 1 297 0
 1442 094e 2648     		ldr	r0, .L79+4
 1443 0950 FFF7FEFF 		bl	PrintStr
 298:../src/lcd.c  ****         __delay_cycles(4000);
 1444              		.loc 1 298 0
 1445 0954 4FF47A60 		mov	r0, #4000
 1446 0958 FFF7FEFF 		bl	__delay_cycles
 1447              	.L77:
 299:../src/lcd.c  ****     }
 300:../src/lcd.c  **** 
 301:../src/lcd.c  ****     if((((menu_current.designator - menu_first.designator) + 2) < 3) && (menu_current.next) && ((*m
 1448              		.loc 1 301 0
 1449 095c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1450 095e 1A46     		mov	r2, r3
 1451 0960 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1452 0964 D31A     		subs	r3, r2, r3
 1453 0966 03F10203 		add	r3, r3, #2
 1454 096a 022B     		cmp	r3, #2
 1455 096c 34DC     		bgt	.L72
 1456              		.loc 1 301 0 is_stmt 0 discriminator 1
 1457 096e FB69     		ldr	r3, [r7, #28]
 1458 0970 002B     		cmp	r3, #0
 1459 0972 31D0     		beq	.L72
 1460 0974 FB69     		ldr	r3, [r7, #28]
 1461 0976 DB68     		ldr	r3, [r3, #12]
 1462 0978 002B     		cmp	r3, #0
 1463 097a 2DD0     		beq	.L72
 302:../src/lcd.c  ****     {
 303:../src/lcd.c  ****         display_fill_menu_temporary = *(menu_current.next);
 1464              		.loc 1 303 0 is_stmt 1
 1465 097c FB69     		ldr	r3, [r7, #28]
 1466 097e 194A     		ldr	r2, .L79
 1467 0980 1446     		mov	r4, r2
 1468 0982 1D46     		mov	r5, r3
 1469 0984 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1470 0986 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1471 0988 95E80700 		ldmia	r5, {r0, r1, r2}
 1472 098c 84E80700 		stmia	r4, {r0, r1, r2}
 304:../src/lcd.c  ****         display_fill_menu_temporary = *(display_fill_menu_temporary.next);
 1473              		.loc 1 304 0
 1474 0990 144B     		ldr	r3, .L79
 1475 0992 DB68     		ldr	r3, [r3, #12]
 1476 0994 134A     		ldr	r2, .L79
 1477 0996 1446     		mov	r4, r2
 1478 0998 1D46     		mov	r5, r3
 1479 099a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1480 099c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1481 099e 95E80700 		ldmia	r5, {r0, r1, r2}
 1482 09a2 84E80700 		stmia	r4, {r0, r1, r2}
 305:../src/lcd.c  **** 
 306:../src/lcd.c  ****         Cursor(3, 0);
 1483              		.loc 1 306 0
 1484 09a6 4FF00300 		mov	r0, #3
 1485 09aa 4FF00001 		mov	r1, #0
 1486 09ae FFF7FEFF 		bl	Cursor
 307:../src/lcd.c  ****         __delay_cycles(40000);
 1487              		.loc 1 307 0
 1488 09b2 49F64040 		movw	r0, #40000
 1489 09b6 FFF7FEFF 		bl	__delay_cycles
 308:../src/lcd.c  ****         StrAlign(display_fill_menu_temporary.nev, temp, ALIGN_LEFT);
 1490              		.loc 1 308 0
 1491 09ba 0A4B     		ldr	r3, .L79
 1492 09bc 1B68     		ldr	r3, [r3, #0]
 1493 09be 1846     		mov	r0, r3
 1494 09c0 0949     		ldr	r1, .L79+4
 1495 09c2 4FF00102 		mov	r2, #1
 1496 09c6 FFF7FEFF 		bl	StrAlign
 309:../src/lcd.c  ****         PrintStr(temp);
 1497              		.loc 1 309 0
 1498 09ca 0748     		ldr	r0, .L79+4
 1499 09cc FFF7FEFF 		bl	PrintStr
 310:../src/lcd.c  ****         __delay_cycles(4000);
 1500              		.loc 1 310 0
 1501 09d0 4FF47A60 		mov	r0, #4000
 1502 09d4 FFF7FEFF 		bl	__delay_cycles
 1503              	.L72:
 311:../src/lcd.c  ****     }
 312:../src/lcd.c  **** }
 1504              		.loc 1 312 0
 1505 09d8 BD46     		mov	sp, r7
 1506 09da BDE8B040 		pop	{r4, r5, r7, lr}
 1507 09de 04B0     		add	sp, sp, #16
 1508 09e0 7047     		bx	lr
 1509              	.L80:
 1510 09e2 00BF     		.align	2
 1511              	.L79:
 1512 09e4 00000000 		.word	display_fill_menu_temporary
 1513 09e8 00000000 		.word	temp
 1514              		.cfi_endproc
 1515              	.LFE120:
 1517              	.Letext0:
 1518              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 1519              		.file 3 "C:\\Users\\Gergo\\workspace\\estevan\\Libraries\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 1520              		.file 4 "C:\\Users\\Gergo\\workspace\\estevan\\Libraries\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4x
 1521              		.file 5 "../src/lcd.h"
 1522              		.file 6 "C:\\Users\\Gergo\\workspace\\estevan\\Libraries\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
                            *COM*:00000008 GPIO_InitStructure
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:19     .text:00000000 $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:24     .text:00000000 __delay_cycles
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:84     .text:00000040 PulseLcm
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:130    .text:00000084 $d
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:134    .text:00000088 $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:139    .text:00000088 SendByte
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:243    .text:00000130 $d
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:247    .text:00000134 $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:252    .text:00000134 ReceiveStatus
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:399    .text:00000240 $d
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:405    .text:0000024c $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:410    .text:0000024c Cursor
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:492    .text:000002bc ClearLcmScreen
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:533    .text:000002f4 InitializeLcm
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:650    .text:000003e0 $d
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:655    .text:000003e8 $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:660    .text:000003e8 StrAlign
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:697    .text:0000041c $d
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:703    .text:0000042c $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1035   .text:00000668 PrintStr
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1095   .text:000006ac dec2bcd
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1204   .text:00000764 $d
                            *COM*:0000001c display_fill_menu_temporary
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1210   .text:0000076c $t
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1215   .text:0000076c DisplayFill
C:\Users\Gergo\AppData\Local\Temp\ccXtJ9Bd.s:1512   .text:000009e4 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.fa6ddc8087252f7ec15b7f8b8133d3d8
                           .group:00000000 wm4.stm32f4xx.h.48.0b3cda0630bac1bf9be1255cab0e1f3b
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.283.d309488c8c88fbc6a572fb5ddb72ae02
                           .group:00000000 wm4.stm32f4xx_exti.h.54.435fdeac3da378720d6c1615172f0bf3
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6967.11efd59d6a7da8b33ccb47eb4d57a5b3
                           .group:00000000 wm4.lcd.h.13.0d900ff88ac12383d178cd2ac70c6d4c

UNDEFINED SYMBOLS
GPIO_Init
RCC_AHB1PeriphClockCmd
temp
