   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_wwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	WWDG_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	WWDG_DeInit:
  24              	.LFB110:
  25              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @version V1.0.0
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @date    30-September-2011
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Prescaler, Refresh window and Counter configuration
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - WWDG activation
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Interrupts and flags management
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @verbatim
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *    
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                     WWDG features
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                        
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG generates a system reset on expiry of a programmed
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          time period, unless the program refreshes the counter (downcounter) 
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before to reach 0x3F value (i.e. a reset is generated when the counter
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          value rolls over from 0x40 to 0x3F). 
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          An MCU reset is also generated if the counter value is refreshed
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before the counter has reached the refresh window value. This 
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          implies that the counter must be refreshed in a limited window.
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG cannot be disabled except by a system reset.                    
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          reset occurs.
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          The WWDG counter input clock is derived from the APB clock divided 
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          by a programmable prescaler.
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *              
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG counter clock = PCLK1 / Prescaler
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG timeout = (WWDG counter clock) * (counter value)
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                      
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Min-max timeout value @42 MHz(PCLK1): ~97.5 us / ~49.9 ms
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                            
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                 How to use this driver
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          =================================================================== 
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          1. Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) functio
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          2. Configure the WWDG prescaler using WWDG_SetPrescaler() function
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                           
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          3. Configure the WWDG refresh window using WWDG_SetWindowValue() function
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          4. Set the WWDG counter value and start it using WWDG_Enable() function.
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             When the WWDG is enabled the counter value should be configured to 
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             a value greater than 0x40 to prevent generating an immediate reset.     
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          5. Optionally you can enable the Early wakeup interrupt which is 
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             generated when the counter reach 0x40.
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             Once enabled this interrupt cannot be disabled except by a system reset.
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                 
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          6. Then the application program must refresh the WWDG counter at regular
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             WWDG_SetCounter() function. This operation must occur only when
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             the counter value is lower than the refresh window value, 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             programmed using WWDG_SetWindowValue().         
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @endverbatim  
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                             
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @attention
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****           Prescaler, Refresh window and Counter configuration functions
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  26              		.loc 1 135 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  38              		.loc 1 136 0
  39 0004 4FF40060 		mov	r0, #2048
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  42              		.loc 1 137 0
  43 0010 4FF40060 		mov	r0, #2048
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  46              		.loc 1 138 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	WWDG_SetPrescaler
  53              		.thumb
  54              		.thumb_func
  56              	WWDG_SetPrescaler:
  57              	.LFB111:
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  58              		.loc 1 151 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 16
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 85B0     		sub	sp, sp, #20
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 24
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  74              		.loc 1 152 0
  75 0028 4FF00003 		mov	r3, #0
  76 002c FB60     		str	r3, [r7, #12]
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  77              		.loc 1 156 0
  78 002e 084B     		ldr	r3, .L3
  79 0030 5B68     		ldr	r3, [r3, #4]
  80 0032 23F4C073 		bic	r3, r3, #384
  81 0036 FB60     		str	r3, [r7, #12]
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  82              		.loc 1 158 0
  83 0038 FA68     		ldr	r2, [r7, #12]
  84 003a 7B68     		ldr	r3, [r7, #4]
  85 003c 1343     		orrs	r3, r3, r2
  86 003e FB60     		str	r3, [r7, #12]
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  87              		.loc 1 160 0
  88 0040 034B     		ldr	r3, .L3
  89 0042 FA68     		ldr	r2, [r7, #12]
  90 0044 5A60     		str	r2, [r3, #4]
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  91              		.loc 1 161 0
  92 0046 07F11407 		add	r7, r7, #20
  93 004a BD46     		mov	sp, r7
  94 004c 80BC     		pop	{r7}
  95 004e 7047     		bx	lr
  96              	.L4:
  97              		.align	2
  98              	.L3:
  99 0050 002C0040 		.word	1073753088
 100              		.cfi_endproc
 101              	.LFE111:
 103              		.align	2
 104              		.global	WWDG_SetWindowValue
 105              		.thumb
 106              		.thumb_func
 108              	WWDG_SetWindowValue:
 109              	.LFB112:
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 110              		.loc 1 170 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 16
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115 0054 80B4     		push	{r7}
 116              	.LCFI5:
 117              		.cfi_def_cfa_offset 4
 118              		.cfi_offset 7, -4
 119 0056 85B0     		sub	sp, sp, #20
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 24
 122 0058 00AF     		add	r7, sp, #0
 123              	.LCFI7:
 124              		.cfi_def_cfa_register 7
 125 005a 0346     		mov	r3, r0
 126 005c FB71     		strb	r3, [r7, #7]
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 127              		.loc 1 171 0
 128 005e 4FF00003 		mov	r3, #0
 129 0062 FB60     		str	r3, [r7, #12]
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 130              		.loc 1 177 0
 131 0064 094B     		ldr	r3, .L6
 132 0066 5B68     		ldr	r3, [r3, #4]
 133 0068 23F07F03 		bic	r3, r3, #127
 134 006c FB60     		str	r3, [r7, #12]
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 135              		.loc 1 180 0
 136 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 137 0070 03F07F02 		and	r2, r3, #127
 138 0074 FB68     		ldr	r3, [r7, #12]
 139 0076 1343     		orrs	r3, r3, r2
 140 0078 FB60     		str	r3, [r7, #12]
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 141              		.loc 1 183 0
 142 007a 044B     		ldr	r3, .L6
 143 007c FA68     		ldr	r2, [r7, #12]
 144 007e 5A60     		str	r2, [r3, #4]
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 145              		.loc 1 184 0
 146 0080 07F11407 		add	r7, r7, #20
 147 0084 BD46     		mov	sp, r7
 148 0086 80BC     		pop	{r7}
 149 0088 7047     		bx	lr
 150              	.L7:
 151 008a 00BF     		.align	2
 152              	.L6:
 153 008c 002C0040 		.word	1073753088
 154              		.cfi_endproc
 155              	.LFE112:
 157              		.align	2
 158              		.global	WWDG_EnableIT
 159              		.thumb
 160              		.thumb_func
 162              	WWDG_EnableIT:
 163              	.LFB113:
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 164              		.loc 1 193 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0090 80B4     		push	{r7}
 170              	.LCFI8:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0092 00AF     		add	r7, sp, #0
 174              	.LCFI9:
 175              		.cfi_def_cfa_register 7
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 176              		.loc 1 194 0
 177 0094 034B     		ldr	r3, .L9
 178 0096 4FF00102 		mov	r2, #1
 179 009a 1A60     		str	r2, [r3, #0]
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 180              		.loc 1 195 0
 181 009c BD46     		mov	sp, r7
 182 009e 80BC     		pop	{r7}
 183 00a0 7047     		bx	lr
 184              	.L10:
 185 00a2 00BF     		.align	2
 186              	.L9:
 187 00a4 A4800542 		.word	1107656868
 188              		.cfi_endproc
 189              	.LFE113:
 191              		.align	2
 192              		.global	WWDG_SetCounter
 193              		.thumb
 194              		.thumb_func
 196              	WWDG_SetCounter:
 197              	.LFB114:
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 198              		.loc 1 205 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 00a8 80B4     		push	{r7}
 204              	.LCFI10:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 00aa 83B0     		sub	sp, sp, #12
 208              	.LCFI11:
 209              		.cfi_def_cfa_offset 16
 210 00ac 00AF     		add	r7, sp, #0
 211              	.LCFI12:
 212              		.cfi_def_cfa_register 7
 213 00ae 0346     		mov	r3, r0
 214 00b0 FB71     		strb	r3, [r7, #7]
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 215              		.loc 1 210 0
 216 00b2 054B     		ldr	r3, .L12
 217 00b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 218 00b6 02F07F02 		and	r2, r2, #127
 219 00ba 1A60     		str	r2, [r3, #0]
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 220              		.loc 1 211 0
 221 00bc 07F10C07 		add	r7, r7, #12
 222 00c0 BD46     		mov	sp, r7
 223 00c2 80BC     		pop	{r7}
 224 00c4 7047     		bx	lr
 225              	.L13:
 226 00c6 00BF     		.align	2
 227              	.L12:
 228 00c8 002C0040 		.word	1073753088
 229              		.cfi_endproc
 230              	.LFE114:
 232              		.align	2
 233              		.global	WWDG_Enable
 234              		.thumb
 235              		.thumb_func
 237              	WWDG_Enable:
 238              	.LFB115:
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                        WWDG activation function
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 239              		.loc 1 236 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244 00cc 80B4     		push	{r7}
 245              	.LCFI13:
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 7, -4
 248 00ce 83B0     		sub	sp, sp, #12
 249              	.LCFI14:
 250              		.cfi_def_cfa_offset 16
 251 00d0 00AF     		add	r7, sp, #0
 252              	.LCFI15:
 253              		.cfi_def_cfa_register 7
 254 00d2 0346     		mov	r3, r0
 255 00d4 FB71     		strb	r3, [r7, #7]
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 256              		.loc 1 239 0
 257 00d6 054B     		ldr	r3, .L15
 258 00d8 FA79     		ldrb	r2, [r7, #7]
 259 00da 62F07F02 		orn	r2, r2, #127
 260 00de D2B2     		uxtb	r2, r2
 261 00e0 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 262              		.loc 1 240 0
 263 00e2 07F10C07 		add	r7, r7, #12
 264 00e6 BD46     		mov	sp, r7
 265 00e8 80BC     		pop	{r7}
 266 00ea 7047     		bx	lr
 267              	.L16:
 268              		.align	2
 269              	.L15:
 270 00ec 002C0040 		.word	1073753088
 271              		.cfi_endproc
 272              	.LFE115:
 274              		.align	2
 275              		.global	WWDG_GetFlagStatus
 276              		.thumb
 277              		.thumb_func
 279              	WWDG_GetFlagStatus:
 280              	.LFB116:
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                  Interrupts and flags management functions
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 281              		.loc 1 263 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 00f0 80B4     		push	{r7}
 287              	.LCFI16:
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 00f2 83B0     		sub	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 16
 293 00f4 00AF     		add	r7, sp, #0
 294              	.LCFI18:
 295              		.cfi_def_cfa_register 7
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 296              		.loc 1 264 0
 297 00f6 4FF00003 		mov	r3, #0
 298 00fa FB71     		strb	r3, [r7, #7]
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 299              		.loc 1 266 0
 300 00fc 084B     		ldr	r3, .L21
 301 00fe 9B68     		ldr	r3, [r3, #8]
 302 0100 002B     		cmp	r3, #0
 303 0102 03D0     		beq	.L18
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 304              		.loc 1 268 0
 305 0104 4FF00103 		mov	r3, #1
 306 0108 FB71     		strb	r3, [r7, #7]
 307 010a 02E0     		b	.L19
 308              	.L18:
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   else
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 309              		.loc 1 272 0
 310 010c 4FF00003 		mov	r3, #0
 311 0110 FB71     		strb	r3, [r7, #7]
 312              	.L19:
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   return bitstatus;
 313              		.loc 1 274 0
 314 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 315              		.loc 1 275 0
 316 0114 1846     		mov	r0, r3
 317 0116 07F10C07 		add	r7, r7, #12
 318 011a BD46     		mov	sp, r7
 319 011c 80BC     		pop	{r7}
 320 011e 7047     		bx	lr
 321              	.L22:
 322              		.align	2
 323              	.L21:
 324 0120 002C0040 		.word	1073753088
 325              		.cfi_endproc
 326              	.LFE116:
 328              		.align	2
 329              		.global	WWDG_ClearFlag
 330              		.thumb
 331              		.thumb_func
 333              	WWDG_ClearFlag:
 334              	.LFB117:
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 335              		.loc 1 283 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0124 80B4     		push	{r7}
 341              	.LCFI19:
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 7, -4
 344 0126 00AF     		add	r7, sp, #0
 345              	.LCFI20:
 346              		.cfi_def_cfa_register 7
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 347              		.loc 1 284 0
 348 0128 034B     		ldr	r3, .L24
 349 012a 4FF00002 		mov	r2, #0
 350 012e 9A60     		str	r2, [r3, #8]
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 351              		.loc 1 285 0
 352 0130 BD46     		mov	sp, r7
 353 0132 80BC     		pop	{r7}
 354 0134 7047     		bx	lr
 355              	.L25:
 356 0136 00BF     		.align	2
 357              	.L24:
 358 0138 002C0040 		.word	1073753088
 359              		.cfi_endproc
 360              	.LFE117:
 362              	.Letext0:
 363              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 364              		.file 3 "C:\\Users\\Gergo\\workspace\\estevan\\Libraries\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 365              		.file 4 "C:\\Users\\Gergo\\workspace\\estevan\\Libraries\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:18     .text:00000000 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:23     .text:00000000 WWDG_DeInit
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:56     .text:00000020 WWDG_SetPrescaler
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:99     .text:00000050 $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:103    .text:00000054 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:108    .text:00000054 WWDG_SetWindowValue
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:153    .text:0000008c $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:157    .text:00000090 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:162    .text:00000090 WWDG_EnableIT
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:187    .text:000000a4 $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:191    .text:000000a8 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:196    .text:000000a8 WWDG_SetCounter
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:228    .text:000000c8 $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:232    .text:000000cc $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:237    .text:000000cc WWDG_Enable
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:270    .text:000000ec $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:274    .text:000000f0 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:279    .text:000000f0 WWDG_GetFlagStatus
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:324    .text:00000120 $d
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:328    .text:00000124 $t
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:333    .text:00000124 WWDG_ClearFlag
C:\Users\Gergo\AppData\Local\Temp\ccqDhSwO.s:358    .text:00000138 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.fa6ddc8087252f7ec15b7f8b8133d3d8
                           .group:00000000 wm4.stm32f4xx.h.48.0b3cda0630bac1bf9be1255cab0e1f3b
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.283.d309488c8c88fbc6a572fb5ddb72ae02
                           .group:00000000 wm4.stm32f4xx_exti.h.54.435fdeac3da378720d6c1615172f0bf3
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6967.11efd59d6a7da8b33ccb47eb4d57a5b3
                           .group:00000000 wm4.stm32f4xx_wwdg.h.53.3e790295d2b8bdc946b554a5f6acc1cf

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
